//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.36213
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace XYS.Remp.Screening.Services {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_User", Namespace="http://schemas.datacontract.org/2004/07/Screening.Model")]
    [System.SerializableAttribute()]
    public partial class M_User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CrardNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PwdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CrardNo {
            get {
                return this.CrardNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CrardNoField, value) != true)) {
                    this.CrardNoField = value;
                    this.RaisePropertyChanged("CrardNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobie {
            get {
                return this.MobieField;
            }
            set {
                if ((object.ReferenceEquals(this.MobieField, value) != true)) {
                    this.MobieField = value;
                    this.RaisePropertyChanged("Mobie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientAccount {
            get {
                return this.PatientAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientAccountField, value) != true)) {
                    this.PatientAccountField = value;
                    this.RaisePropertyChanged("PatientAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pwd {
            get {
                return this.PwdField;
            }
            set {
                if ((object.ReferenceEquals(this.PwdField, value) != true)) {
                    this.PwdField = value;
                    this.RaisePropertyChanged("Pwd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex {
            get {
                return this.SexField;
            }
            set {
                if ((object.ReferenceEquals(this.SexField, value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_QuestionnaireResultDetail", Namespace="http://schemas.datacontract.org/2004/07/Screening.Model")]
    [System.SerializableAttribute()]
    public partial class M_QuestionnaireResultDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FamilyMemberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PQuestionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PQuestionWeightScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QuestionScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionnaireResultDetailIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FamilyMemberID {
            get {
                return this.FamilyMemberIDField;
            }
            set {
                if ((this.FamilyMemberIDField.Equals(value) != true)) {
                    this.FamilyMemberIDField = value;
                    this.RaisePropertyChanged("FamilyMemberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PQuestionCode {
            get {
                return this.PQuestionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PQuestionCodeField, value) != true)) {
                    this.PQuestionCodeField = value;
                    this.RaisePropertyChanged("PQuestionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PQuestionWeightScore {
            get {
                return this.PQuestionWeightScoreField;
            }
            set {
                if ((this.PQuestionWeightScoreField.Equals(value) != true)) {
                    this.PQuestionWeightScoreField = value;
                    this.RaisePropertyChanged("PQuestionWeightScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionCode {
            get {
                return this.QuestionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionCodeField, value) != true)) {
                    this.QuestionCodeField = value;
                    this.RaisePropertyChanged("QuestionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionResult {
            get {
                return this.QuestionResultField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionResultField, value) != true)) {
                    this.QuestionResultField = value;
                    this.RaisePropertyChanged("QuestionResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QuestionScore {
            get {
                return this.QuestionScoreField;
            }
            set {
                if ((this.QuestionScoreField.Equals(value) != true)) {
                    this.QuestionScoreField = value;
                    this.RaisePropertyChanged("QuestionScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionType {
            get {
                return this.QuestionTypeField;
            }
            set {
                if ((this.QuestionTypeField.Equals(value) != true)) {
                    this.QuestionTypeField = value;
                    this.RaisePropertyChanged("QuestionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionUserId {
            get {
                return this.QuestionUserIdField;
            }
            set {
                if ((this.QuestionUserIdField.Equals(value) != true)) {
                    this.QuestionUserIdField = value;
                    this.RaisePropertyChanged("QuestionUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionnaireResultDetailId {
            get {
                return this.QuestionnaireResultDetailIdField;
            }
            set {
                if ((this.QuestionnaireResultDetailIdField.Equals(value) != true)) {
                    this.QuestionnaireResultDetailIdField = value;
                    this.RaisePropertyChanged("QuestionnaireResultDetailId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_Msg", Namespace="http://schemas.datacontract.org/2004/07/Screening.Model")]
    [System.SerializableAttribute()]
    public partial class M_Msg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccssField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccss {
            get {
                return this.IsSuccssField;
            }
            set {
                if ((this.IsSuccssField.Equals(value) != true)) {
                    this.IsSuccssField = value;
                    this.RaisePropertyChanged("IsSuccss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_OrganizationInfo", Namespace="http://schemas.datacontract.org/2004/07/Screening.Model")]
    [System.SerializableAttribute()]
    public partial class M_OrganizationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BannerFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DispOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<sbyte> GroupTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte InvalidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsAllowConsuitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsAllowNetDiagnoseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsAllowReserveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsInheritBaseInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogofileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MembersSiteLogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte OrgKindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<sbyte> OrgLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte OrgTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentOrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte ServeUnitFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AreaID {
            get {
                return this.AreaIDField;
            }
            set {
                if ((this.AreaIDField.Equals(value) != true)) {
                    this.AreaIDField = value;
                    this.RaisePropertyChanged("AreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BannerFile {
            get {
                return this.BannerFileField;
            }
            set {
                if ((object.ReferenceEquals(this.BannerFileField, value) != true)) {
                    this.BannerFileField = value;
                    this.RaisePropertyChanged("BannerFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DispOrder {
            get {
                return this.DispOrderField;
            }
            set {
                if ((this.DispOrderField.Equals(value) != true)) {
                    this.DispOrderField = value;
                    this.RaisePropertyChanged("DispOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxNO {
            get {
                return this.FaxNOField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxNOField, value) != true)) {
                    this.FaxNOField = value;
                    this.RaisePropertyChanged("FaxNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<sbyte> GroupType {
            get {
                return this.GroupTypeField;
            }
            set {
                if ((this.GroupTypeField.Equals(value) != true)) {
                    this.GroupTypeField = value;
                    this.RaisePropertyChanged("GroupType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte Invalid {
            get {
                return this.InvalidField;
            }
            set {
                if ((this.InvalidField.Equals(value) != true)) {
                    this.InvalidField = value;
                    this.RaisePropertyChanged("Invalid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsAllowConsuit {
            get {
                return this.IsAllowConsuitField;
            }
            set {
                if ((this.IsAllowConsuitField.Equals(value) != true)) {
                    this.IsAllowConsuitField = value;
                    this.RaisePropertyChanged("IsAllowConsuit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsAllowNetDiagnose {
            get {
                return this.IsAllowNetDiagnoseField;
            }
            set {
                if ((this.IsAllowNetDiagnoseField.Equals(value) != true)) {
                    this.IsAllowNetDiagnoseField = value;
                    this.RaisePropertyChanged("IsAllowNetDiagnose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsAllowReserve {
            get {
                return this.IsAllowReserveField;
            }
            set {
                if ((this.IsAllowReserveField.Equals(value) != true)) {
                    this.IsAllowReserveField = value;
                    this.RaisePropertyChanged("IsAllowReserve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsInheritBaseInfo {
            get {
                return this.IsInheritBaseInfoField;
            }
            set {
                if ((this.IsInheritBaseInfoField.Equals(value) != true)) {
                    this.IsInheritBaseInfoField = value;
                    this.RaisePropertyChanged("IsInheritBaseInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsPublic {
            get {
                return this.IsPublicField;
            }
            set {
                if ((this.IsPublicField.Equals(value) != true)) {
                    this.IsPublicField = value;
                    this.RaisePropertyChanged("IsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logofile {
            get {
                return this.LogofileField;
            }
            set {
                if ((object.ReferenceEquals(this.LogofileField, value) != true)) {
                    this.LogofileField = value;
                    this.RaisePropertyChanged("Logofile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MembersSiteLogo {
            get {
                return this.MembersSiteLogoField;
            }
            set {
                if ((object.ReferenceEquals(this.MembersSiteLogoField, value) != true)) {
                    this.MembersSiteLogoField = value;
                    this.RaisePropertyChanged("MembersSiteLogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgCode {
            get {
                return this.OrgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgCodeField, value) != true)) {
                    this.OrgCodeField = value;
                    this.RaisePropertyChanged("OrgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgFullName {
            get {
                return this.OrgFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgFullNameField, value) != true)) {
                    this.OrgFullNameField = value;
                    this.RaisePropertyChanged("OrgFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte OrgKind {
            get {
                return this.OrgKindField;
            }
            set {
                if ((this.OrgKindField.Equals(value) != true)) {
                    this.OrgKindField = value;
                    this.RaisePropertyChanged("OrgKind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<sbyte> OrgLevel {
            get {
                return this.OrgLevelField;
            }
            set {
                if ((this.OrgLevelField.Equals(value) != true)) {
                    this.OrgLevelField = value;
                    this.RaisePropertyChanged("OrgLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgName {
            get {
                return this.OrgNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgNameField, value) != true)) {
                    this.OrgNameField = value;
                    this.RaisePropertyChanged("OrgName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgOrder {
            get {
                return this.OrgOrderField;
            }
            set {
                if ((this.OrgOrderField.Equals(value) != true)) {
                    this.OrgOrderField = value;
                    this.RaisePropertyChanged("OrgOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgPath {
            get {
                return this.OrgPathField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgPathField, value) != true)) {
                    this.OrgPathField = value;
                    this.RaisePropertyChanged("OrgPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte OrgType {
            get {
                return this.OrgTypeField;
            }
            set {
                if ((this.OrgTypeField.Equals(value) != true)) {
                    this.OrgTypeField = value;
                    this.RaisePropertyChanged("OrgType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentOrgID {
            get {
                return this.ParentOrgIDField;
            }
            set {
                if ((this.ParentOrgIDField.Equals(value) != true)) {
                    this.ParentOrgIDField = value;
                    this.RaisePropertyChanged("ParentOrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte ServeUnitFlag {
            get {
                return this.ServeUnitFlagField;
            }
            set {
                if ((this.ServeUnitFlagField.Equals(value) != true)) {
                    this.ServeUnitFlagField = value;
                    this.RaisePropertyChanged("ServeUnitFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitId {
            get {
                return this.UnitIdField;
            }
            set {
                if ((this.UnitIdField.Equals(value) != true)) {
                    this.UnitIdField = value;
                    this.RaisePropertyChanged("UnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_CottageActivity", Namespace="http://schemas.datacontract.org/2004/07/Screening.Model")]
    [System.SerializableAttribute()]
    public partial class M_CottageActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CActivityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CActivityID {
            get {
                return this.CActivityIDField;
            }
            set {
                if ((this.CActivityIDField.Equals(value) != true)) {
                    this.CActivityIDField = value;
                    this.RaisePropertyChanged("CActivityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgName {
            get {
                return this.OrgNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgNameField, value) != true)) {
                    this.OrgNameField = value;
                    this.RaisePropertyChanged("OrgName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_DoctorInfo", Namespace="http://schemas.datacontract.org/2004/07/Screening.Model")]
    [System.SerializableAttribute()]
    public partial class M_DoctorInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrAccount {
            get {
                return this.DrAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.DrAccountField, value) != true)) {
                    this.DrAccountField = value;
                    this.RaisePropertyChanged("DrAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrID {
            get {
                return this.DrIDField;
            }
            set {
                if ((this.DrIDField.Equals(value) != true)) {
                    this.DrIDField = value;
                    this.RaisePropertyChanged("DrID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrName {
            get {
                return this.DrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DrNameField, value) != true)) {
                    this.DrNameField = value;
                    this.RaisePropertyChanged("DrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_HealthHouse", Namespace="http://schemas.datacontract.org/2004/07/Screening.Model")]
    [System.SerializableAttribute()]
    public partial class M_HealthHouse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgCode {
            get {
                return this.OrgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgCodeField, value) != true)) {
                    this.OrgCodeField = value;
                    this.RaisePropertyChanged("OrgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgName {
            get {
                return this.OrgNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgNameField, value) != true)) {
                    this.OrgNameField = value;
                    this.RaisePropertyChanged("OrgName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_CottageActivityRecord", Namespace="http://schemas.datacontract.org/2004/07/Screening.Model")]
    [System.SerializableAttribute()]
    public partial class M_CottageActivityRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CARecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CActivityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreateDrIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreateDrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DoctorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DrIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HealthCoinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NetWorkTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte RegSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelationtIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte SignSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte StatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UpdateDrIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateDrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CARecordID {
            get {
                return this.CARecordIDField;
            }
            set {
                if ((this.CARecordIDField.Equals(value) != true)) {
                    this.CARecordIDField = value;
                    this.RaisePropertyChanged("CARecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CActivityID {
            get {
                return this.CActivityIDField;
            }
            set {
                if ((this.CActivityIDField.Equals(value) != true)) {
                    this.CActivityIDField = value;
                    this.RaisePropertyChanged("CActivityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Cash {
            get {
                return this.CashField;
            }
            set {
                if ((this.CashField.Equals(value) != true)) {
                    this.CashField = value;
                    this.RaisePropertyChanged("Cash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreateDrID {
            get {
                return this.CreateDrIDField;
            }
            set {
                if ((this.CreateDrIDField.Equals(value) != true)) {
                    this.CreateDrIDField = value;
                    this.RaisePropertyChanged("CreateDrID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreateDrName {
            get {
                return this.CreateDrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateDrNameField, value) != true)) {
                    this.CreateDrNameField = value;
                    this.RaisePropertyChanged("CreateDrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DoctorID {
            get {
                return this.DoctorIDField;
            }
            set {
                if ((this.DoctorIDField.Equals(value) != true)) {
                    this.DoctorIDField = value;
                    this.RaisePropertyChanged("DoctorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoctorName {
            get {
                return this.DoctorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorNameField, value) != true)) {
                    this.DoctorNameField = value;
                    this.RaisePropertyChanged("DoctorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DrID {
            get {
                return this.DrIDField;
            }
            set {
                if ((this.DrIDField.Equals(value) != true)) {
                    this.DrIDField = value;
                    this.RaisePropertyChanged("DrID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrName {
            get {
                return this.DrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DrNameField, value) != true)) {
                    this.DrNameField = value;
                    this.RaisePropertyChanged("DrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HealthCoin {
            get {
                return this.HealthCoinField;
            }
            set {
                if ((this.HealthCoinField.Equals(value) != true)) {
                    this.HealthCoinField = value;
                    this.RaisePropertyChanged("HealthCoin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NetWorkType {
            get {
                return this.NetWorkTypeField;
            }
            set {
                if ((this.NetWorkTypeField.Equals(value) != true)) {
                    this.NetWorkTypeField = value;
                    this.RaisePropertyChanged("NetWorkType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientAccount {
            get {
                return this.PatientAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientAccountField, value) != true)) {
                    this.PatientAccountField = value;
                    this.RaisePropertyChanged("PatientAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte RegSource {
            get {
                return this.RegSourceField;
            }
            set {
                if ((this.RegSourceField.Equals(value) != true)) {
                    this.RegSourceField = value;
                    this.RaisePropertyChanged("RegSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelationtID {
            get {
                return this.RelationtIDField;
            }
            set {
                if ((this.RelationtIDField.Equals(value) != true)) {
                    this.RelationtIDField = value;
                    this.RaisePropertyChanged("RelationtID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte SignSource {
            get {
                return this.SignSourceField;
            }
            set {
                if ((this.SignSourceField.Equals(value) != true)) {
                    this.SignSourceField = value;
                    this.RaisePropertyChanged("SignSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte StatusID {
            get {
                return this.StatusIDField;
            }
            set {
                if ((this.StatusIDField.Equals(value) != true)) {
                    this.StatusIDField = value;
                    this.RaisePropertyChanged("StatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UpdateDrID {
            get {
                return this.UpdateDrIDField;
            }
            set {
                if ((this.UpdateDrIDField.Equals(value) != true)) {
                    this.UpdateDrIDField = value;
                    this.RaisePropertyChanged("UpdateDrID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateDrName {
            get {
                return this.UpdateDrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateDrNameField, value) != true)) {
                    this.UpdateDrNameField = value;
                    this.RaisePropertyChanged("UpdateDrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_MemberFeaturesRecord", Namespace="http://schemas.datacontract.org/2004/07/Screening.Model")]
    [System.SerializableAttribute()]
    public partial class M_MemberFeaturesRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MFItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreateID {
            get {
                return this.CreateIDField;
            }
            set {
                if ((this.CreateIDField.Equals(value) != true)) {
                    this.CreateIDField = value;
                    this.RaisePropertyChanged("CreateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MFItemID {
            get {
                return this.MFItemIDField;
            }
            set {
                if ((this.MFItemIDField.Equals(value) != true)) {
                    this.MFItemIDField = value;
                    this.RaisePropertyChanged("MFItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_MemberFeaturesRecordLogExt", Namespace="http://schemas.datacontract.org/2004/07/Screening.Model")]
    [System.SerializableAttribute()]
    public partial class M_MemberFeaturesRecordLogExt : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DoctorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DrIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OpIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DoctorID {
            get {
                return this.DoctorIDField;
            }
            set {
                if ((this.DoctorIDField.Equals(value) != true)) {
                    this.DoctorIDField = value;
                    this.RaisePropertyChanged("DoctorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoctorName {
            get {
                return this.DoctorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorNameField, value) != true)) {
                    this.DoctorNameField = value;
                    this.RaisePropertyChanged("DoctorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DrID {
            get {
                return this.DrIDField;
            }
            set {
                if ((this.DrIDField.Equals(value) != true)) {
                    this.DrIDField = value;
                    this.RaisePropertyChanged("DrID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrName {
            get {
                return this.DrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DrNameField, value) != true)) {
                    this.DrNameField = value;
                    this.RaisePropertyChanged("DrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OpID {
            get {
                return this.OpIDField;
            }
            set {
                if ((this.OpIDField.Equals(value) != true)) {
                    this.OpIDField = value;
                    this.RaisePropertyChanged("OpID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpName {
            get {
                return this.OpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OpNameField, value) != true)) {
                    this.OpNameField = value;
                    this.RaisePropertyChanged("OpName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_QuestionnaireUserDetail", Namespace="http://schemas.datacontract.org/2004/07/Screening.Model")]
    [System.SerializableAttribute()]
    public partial class M_QuestionnaireUserDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AnswerTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FamilyMemberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionnaireCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionnaireNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionnaireRecodIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal QuestionnaireScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionnaireStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte QuestionnaireTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityId {
            get {
                return this.ActivityIdField;
            }
            set {
                if ((this.ActivityIdField.Equals(value) != true)) {
                    this.ActivityIdField = value;
                    this.RaisePropertyChanged("ActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AnswerTime {
            get {
                return this.AnswerTimeField;
            }
            set {
                if ((this.AnswerTimeField.Equals(value) != true)) {
                    this.AnswerTimeField = value;
                    this.RaisePropertyChanged("AnswerTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FamilyMemberID {
            get {
                return this.FamilyMemberIDField;
            }
            set {
                if ((this.FamilyMemberIDField.Equals(value) != true)) {
                    this.FamilyMemberIDField = value;
                    this.RaisePropertyChanged("FamilyMemberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionnaireCode {
            get {
                return this.QuestionnaireCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionnaireCodeField, value) != true)) {
                    this.QuestionnaireCodeField = value;
                    this.RaisePropertyChanged("QuestionnaireCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuestionnaireName {
            get {
                return this.QuestionnaireNameField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionnaireNameField, value) != true)) {
                    this.QuestionnaireNameField = value;
                    this.RaisePropertyChanged("QuestionnaireName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionnaireRecodId {
            get {
                return this.QuestionnaireRecodIdField;
            }
            set {
                if ((this.QuestionnaireRecodIdField.Equals(value) != true)) {
                    this.QuestionnaireRecodIdField = value;
                    this.RaisePropertyChanged("QuestionnaireRecodId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal QuestionnaireScore {
            get {
                return this.QuestionnaireScoreField;
            }
            set {
                if ((this.QuestionnaireScoreField.Equals(value) != true)) {
                    this.QuestionnaireScoreField = value;
                    this.RaisePropertyChanged("QuestionnaireScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionnaireStatus {
            get {
                return this.QuestionnaireStatusField;
            }
            set {
                if ((this.QuestionnaireStatusField.Equals(value) != true)) {
                    this.QuestionnaireStatusField = value;
                    this.RaisePropertyChanged("QuestionnaireStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte QuestionnaireType {
            get {
                return this.QuestionnaireTypeField;
            }
            set {
                if ((this.QuestionnaireTypeField.Equals(value) != true)) {
                    this.QuestionnaireTypeField = value;
                    this.RaisePropertyChanged("QuestionnaireType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Services.IScreeningService")]
    public interface IScreeningService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/Login", ReplyAction="http://tempuri.org/IScreeningService/LoginResponse")]
        XYS.Remp.Screening.Services.M_User Login(string account, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/AddQuestionUser", ReplyAction="http://tempuri.org/IScreeningService/AddQuestionUserResponse")]
        int AddQuestionUser(string questionnaireCode, int patientId, int questionnaireStatus, System.DateTime answerTime, decimal questionnaireScore, int activityId, string questionnaireName, sbyte questionnaireType, string activityName, int familyMemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetQuestionnaireResultList", ReplyAction="http://tempuri.org/IScreeningService/GetQuestionnaireResultListResponse")]
        XYS.Remp.Screening.Services.M_QuestionnaireResultDetail[] GetQuestionnaireResultList(int patientId, string questionnaireCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/AddQuestionResult", ReplyAction="http://tempuri.org/IScreeningService/AddQuestionResultResponse")]
        int AddQuestionResult(string questionCode, int questionType, int patientId, string questionResult, int questionUserId, decimal questionScore, decimal pQuestionWeightScore, string pQuestionCode, int familyMemberID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/UpdateUserRecordStatus", ReplyAction="http://tempuri.org/IScreeningService/UpdateUserRecordStatusResponse")]
        bool UpdateUserRecordStatus(int questionnaireRecodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetSmsValidCode", ReplyAction="http://tempuri.org/IScreeningService/GetSmsValidCodeResponse")]
        XYS.Remp.Screening.Services.M_Msg GetSmsValidCode(string mobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/CheckSmsValidCode", ReplyAction="http://tempuri.org/IScreeningService/CheckSmsValidCodeResponse")]
        XYS.Remp.Screening.Services.M_Msg CheckSmsValidCode(string mobile, string smsCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/Regist", ReplyAction="http://tempuri.org/IScreeningService/RegistResponse")]
        XYS.Remp.Screening.Services.M_Msg Regist(string account, string mobile, string password, string patientName, string credNo, int sex, System.Nullable<System.DateTime> birthDay, int orgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetUserInfo", ReplyAction="http://tempuri.org/IScreeningService/GetUserInfoResponse")]
        XYS.Remp.Screening.Services.M_User GetUserInfo(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetUserInfoByCardNo", ReplyAction="http://tempuri.org/IScreeningService/GetUserInfoByCardNoResponse")]
        XYS.Remp.Screening.Services.M_User GetUserInfoByCardNo(string cradNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetUserInfoByAccount", ReplyAction="http://tempuri.org/IScreeningService/GetUserInfoByAccountResponse")]
        bool GetUserInfoByAccount(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/UpdateQuestionnaireResult", ReplyAction="http://tempuri.org/IScreeningService/UpdateQuestionnaireResultResponse")]
        bool UpdateQuestionnaireResult(int questionUserId, string questionCode, string newQuestionResult, decimal questionScore, decimal pQuestionWeightScore);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetOrganizationByOrgCode", ReplyAction="http://tempuri.org/IScreeningService/GetOrganizationByOrgCodeResponse")]
        XYS.Remp.Screening.Services.M_OrganizationInfo GetOrganizationByOrgCode(string orgCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetOrganizationInfoByParentOrgID", ReplyAction="http://tempuri.org/IScreeningService/GetOrganizationInfoByParentOrgIDResponse")]
        XYS.Remp.Screening.Services.M_OrganizationInfo[] GetOrganizationInfoByParentOrgID(int parentOrgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetCottageActivityListByOrgId", ReplyAction="http://tempuri.org/IScreeningService/GetCottageActivityListByOrgIdResponse")]
        XYS.Remp.Screening.Services.M_CottageActivity[] GetCottageActivityListByOrgId(int OrgId, sbyte StatusID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetDoctorInfoByAccount", ReplyAction="http://tempuri.org/IScreeningService/GetDoctorInfoByAccountResponse")]
        XYS.Remp.Screening.Services.M_DoctorInfo GetDoctorInfoByAccount(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetHouseListForHouseApp", ReplyAction="http://tempuri.org/IScreeningService/GetHouseListForHouseAppResponse")]
        XYS.Remp.Screening.Services.M_HealthHouse[] GetHouseListForHouseApp(int drid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/AddPatientToCottageActivity", ReplyAction="http://tempuri.org/IScreeningService/AddPatientToCottageActivityResponse")]
        XYS.Remp.Screening.Services.M_CottageActivityRecord AddPatientToCottageActivity(XYS.Remp.Screening.Services.M_CottageActivityRecord entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/UpdateMemberAllRecords", ReplyAction="http://tempuri.org/IScreeningService/UpdateMemberAllRecordsResponse")]
        void UpdateMemberAllRecords(int patientId, XYS.Remp.Screening.Services.M_MemberFeaturesRecord[] records, XYS.Remp.Screening.Services.M_MemberFeaturesRecordLogExt recordLog, System.Nullable<int> CARecordID, string remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetCottageActivityByName", ReplyAction="http://tempuri.org/IScreeningService/GetCottageActivityByNameResponse")]
        XYS.Remp.Screening.Services.M_CottageActivity[] GetCottageActivityByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetHealthHouseByName", ReplyAction="http://tempuri.org/IScreeningService/GetHealthHouseByNameResponse")]
        XYS.Remp.Screening.Services.M_HealthHouse[] GetHealthHouseByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/UpdateQuestionUserScoreStatus", ReplyAction="http://tempuri.org/IScreeningService/UpdateQuestionUserScoreStatusResponse")]
        int UpdateQuestionUserScoreStatus(int questionnaireRecodID, decimal score, int questionnaireStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetQuestionnaireUserDetailsByCode", ReplyAction="http://tempuri.org/IScreeningService/GetQuestionnaireUserDetailsByCodeResponse")]
        XYS.Remp.Screening.Services.M_QuestionnaireUserDetail[] GetQuestionnaireUserDetailsByCode(string questionnaireCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetQuestionnaireResultDetails", ReplyAction="http://tempuri.org/IScreeningService/GetQuestionnaireResultDetailsResponse")]
        XYS.Remp.Screening.Services.M_QuestionnaireResultDetail[] GetQuestionnaireResultDetails(int questionUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/UpdateQuestionUserScore", ReplyAction="http://tempuri.org/IScreeningService/UpdateQuestionUserScoreResponse")]
        int UpdateQuestionUserScore(int questionnaireRecodID, decimal score);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetQuestionnaireListByTypeAndCode", ReplyAction="http://tempuri.org/IScreeningService/GetQuestionnaireListByTypeAndCodeResponse")]
        XYS.Remp.Screening.Services.M_QuestionnaireUserDetail[] GetQuestionnaireListByTypeAndCode(string questionnaireCode, sbyte questionnaireType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/UpdateQuestionnaireResultWeightScore", ReplyAction="http://tempuri.org/IScreeningService/UpdateQuestionnaireResultWeightScoreResponse" +
            "")]
        int UpdateQuestionnaireResultWeightScore(decimal weightScore, int resultId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/UpdateCottageActivityTypeTo1", ReplyAction="http://tempuri.org/IScreeningService/UpdateCottageActivityTypeTo1Response")]
        bool UpdateCottageActivityTypeTo1(int id, int type, System.Nullable<int> drId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetRecordByParm", ReplyAction="http://tempuri.org/IScreeningService/GetRecordByParmResponse")]
        XYS.Remp.Screening.Services.M_CottageActivityRecord GetRecordByParm(int CActivityID, int PatientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetRecordByRelationtId", ReplyAction="http://tempuri.org/IScreeningService/GetRecordByRelationtIdResponse")]
        XYS.Remp.Screening.Services.M_CottageActivityRecord GetRecordByRelationtId(int cActivityId, int relationtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/UpdateCottageActivityRecord", ReplyAction="http://tempuri.org/IScreeningService/UpdateCottageActivityRecordResponse")]
        bool UpdateCottageActivityRecord(XYS.Remp.Screening.Services.M_CottageActivityRecord mCottageActivityRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetMCottageActivityById", ReplyAction="http://tempuri.org/IScreeningService/GetMCottageActivityByIdResponse")]
        XYS.Remp.Screening.Services.M_CottageActivity GetMCottageActivityById(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScreeningServiceChannel : XYS.Remp.Screening.Services.IScreeningService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScreeningServiceClient : System.ServiceModel.ClientBase<XYS.Remp.Screening.Services.IScreeningService>, XYS.Remp.Screening.Services.IScreeningService {
        
        public ScreeningServiceClient() {
        }
        
        public ScreeningServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScreeningServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScreeningServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScreeningServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public XYS.Remp.Screening.Services.M_User Login(string account, string pwd) {
            return base.Channel.Login(account, pwd);
        }
        
        public int AddQuestionUser(string questionnaireCode, int patientId, int questionnaireStatus, System.DateTime answerTime, decimal questionnaireScore, int activityId, string questionnaireName, sbyte questionnaireType, string activityName, int familyMemberID) {
            return base.Channel.AddQuestionUser(questionnaireCode, patientId, questionnaireStatus, answerTime, questionnaireScore, activityId, questionnaireName, questionnaireType, activityName, familyMemberID);
        }
        
        public XYS.Remp.Screening.Services.M_QuestionnaireResultDetail[] GetQuestionnaireResultList(int patientId, string questionnaireCode) {
            return base.Channel.GetQuestionnaireResultList(patientId, questionnaireCode);
        }
        
        public int AddQuestionResult(string questionCode, int questionType, int patientId, string questionResult, int questionUserId, decimal questionScore, decimal pQuestionWeightScore, string pQuestionCode, int familyMemberID) {
            return base.Channel.AddQuestionResult(questionCode, questionType, patientId, questionResult, questionUserId, questionScore, pQuestionWeightScore, pQuestionCode, familyMemberID);
        }
        
        public bool UpdateUserRecordStatus(int questionnaireRecodId) {
            return base.Channel.UpdateUserRecordStatus(questionnaireRecodId);
        }
        
        public XYS.Remp.Screening.Services.M_Msg GetSmsValidCode(string mobile) {
            return base.Channel.GetSmsValidCode(mobile);
        }
        
        public XYS.Remp.Screening.Services.M_Msg CheckSmsValidCode(string mobile, string smsCode) {
            return base.Channel.CheckSmsValidCode(mobile, smsCode);
        }
        
        public XYS.Remp.Screening.Services.M_Msg Regist(string account, string mobile, string password, string patientName, string credNo, int sex, System.Nullable<System.DateTime> birthDay, int orgId) {
            return base.Channel.Regist(account, mobile, password, patientName, credNo, sex, birthDay, orgId);
        }
        
        public XYS.Remp.Screening.Services.M_User GetUserInfo(int userId) {
            return base.Channel.GetUserInfo(userId);
        }
        
        public XYS.Remp.Screening.Services.M_User GetUserInfoByCardNo(string cradNo) {
            return base.Channel.GetUserInfoByCardNo(cradNo);
        }
        
        public bool GetUserInfoByAccount(string account) {
            return base.Channel.GetUserInfoByAccount(account);
        }
        
        public bool UpdateQuestionnaireResult(int questionUserId, string questionCode, string newQuestionResult, decimal questionScore, decimal pQuestionWeightScore) {
            return base.Channel.UpdateQuestionnaireResult(questionUserId, questionCode, newQuestionResult, questionScore, pQuestionWeightScore);
        }
        
        public XYS.Remp.Screening.Services.M_OrganizationInfo GetOrganizationByOrgCode(string orgCode) {
            return base.Channel.GetOrganizationByOrgCode(orgCode);
        }
        
        public XYS.Remp.Screening.Services.M_OrganizationInfo[] GetOrganizationInfoByParentOrgID(int parentOrgID) {
            return base.Channel.GetOrganizationInfoByParentOrgID(parentOrgID);
        }
        
        public XYS.Remp.Screening.Services.M_CottageActivity[] GetCottageActivityListByOrgId(int OrgId, sbyte StatusID) {
            return base.Channel.GetCottageActivityListByOrgId(OrgId, StatusID);
        }
        
        public XYS.Remp.Screening.Services.M_DoctorInfo GetDoctorInfoByAccount(string account) {
            return base.Channel.GetDoctorInfoByAccount(account);
        }
        
        public XYS.Remp.Screening.Services.M_HealthHouse[] GetHouseListForHouseApp(int drid) {
            return base.Channel.GetHouseListForHouseApp(drid);
        }
        
        public XYS.Remp.Screening.Services.M_CottageActivityRecord AddPatientToCottageActivity(XYS.Remp.Screening.Services.M_CottageActivityRecord entity) {
            return base.Channel.AddPatientToCottageActivity(entity);
        }
        
        public void UpdateMemberAllRecords(int patientId, XYS.Remp.Screening.Services.M_MemberFeaturesRecord[] records, XYS.Remp.Screening.Services.M_MemberFeaturesRecordLogExt recordLog, System.Nullable<int> CARecordID, string remark) {
            base.Channel.UpdateMemberAllRecords(patientId, records, recordLog, CARecordID, remark);
        }
        
        public XYS.Remp.Screening.Services.M_CottageActivity[] GetCottageActivityByName(string name) {
            return base.Channel.GetCottageActivityByName(name);
        }
        
        public XYS.Remp.Screening.Services.M_HealthHouse[] GetHealthHouseByName(string name) {
            return base.Channel.GetHealthHouseByName(name);
        }
        
        public int UpdateQuestionUserScoreStatus(int questionnaireRecodID, decimal score, int questionnaireStatus) {
            return base.Channel.UpdateQuestionUserScoreStatus(questionnaireRecodID, score, questionnaireStatus);
        }
        
        public XYS.Remp.Screening.Services.M_QuestionnaireUserDetail[] GetQuestionnaireUserDetailsByCode(string questionnaireCode) {
            return base.Channel.GetQuestionnaireUserDetailsByCode(questionnaireCode);
        }
        
        public XYS.Remp.Screening.Services.M_QuestionnaireResultDetail[] GetQuestionnaireResultDetails(int questionUserId) {
            return base.Channel.GetQuestionnaireResultDetails(questionUserId);
        }
        
        public int UpdateQuestionUserScore(int questionnaireRecodID, decimal score) {
            return base.Channel.UpdateQuestionUserScore(questionnaireRecodID, score);
        }
        
        public XYS.Remp.Screening.Services.M_QuestionnaireUserDetail[] GetQuestionnaireListByTypeAndCode(string questionnaireCode, sbyte questionnaireType) {
            return base.Channel.GetQuestionnaireListByTypeAndCode(questionnaireCode, questionnaireType);
        }
        
        public int UpdateQuestionnaireResultWeightScore(decimal weightScore, int resultId) {
            return base.Channel.UpdateQuestionnaireResultWeightScore(weightScore, resultId);
        }
        
        public bool UpdateCottageActivityTypeTo1(int id, int type, System.Nullable<int> drId) {
            return base.Channel.UpdateCottageActivityTypeTo1(id, type, drId);
        }
        
        public XYS.Remp.Screening.Services.M_CottageActivityRecord GetRecordByParm(int CActivityID, int PatientId) {
            return base.Channel.GetRecordByParm(CActivityID, PatientId);
        }
        
        public XYS.Remp.Screening.Services.M_CottageActivityRecord GetRecordByRelationtId(int cActivityId, int relationtId) {
            return base.Channel.GetRecordByRelationtId(cActivityId, relationtId);
        }
        
        public bool UpdateCottageActivityRecord(XYS.Remp.Screening.Services.M_CottageActivityRecord mCottageActivityRecord) {
            return base.Channel.UpdateCottageActivityRecord(mCottageActivityRecord);
        }
        
        public XYS.Remp.Screening.Services.M_CottageActivity GetMCottageActivityById(int id) {
            return base.Channel.GetMCottageActivityById(id);
        }
    }
}
