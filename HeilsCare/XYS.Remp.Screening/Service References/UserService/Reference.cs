//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.36213
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace XYS.Remp.Screening.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageOf<M_DemoAccount>", Namespace="http://schemas.datacontract.org/2004/07/User.Common.Page")]
    [System.SerializableAttribute()]
    public partial class PageOfM_DemoAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private XYS.Remp.Screening.UserService.M_DemoAccount[] PageOfResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public XYS.Remp.Screening.UserService.M_DemoAccount[] PageOfResults {
            get {
                return this.PageOfResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.PageOfResultsField, value) != true)) {
                    this.PageOfResultsField = value;
                    this.RaisePropertyChanged("PageOfResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_DemoAccount", Namespace="http://schemas.datacontract.org/2004/07/User.Model.DemoAccount")]
    [System.SerializableAttribute()]
    public partial class M_DemoAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DemoAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemoAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DemoAccount {
            get {
                return this.DemoAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.DemoAccountField, value) != true)) {
                    this.DemoAccountField = value;
                    this.RaisePropertyChanged("DemoAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemoAccountId {
            get {
                return this.DemoAccountIdField;
            }
            set {
                if ((this.DemoAccountIdField.Equals(value) != true)) {
                    this.DemoAccountIdField = value;
                    this.RaisePropertyChanged("DemoAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageOf<M_PatientDemoAccountExt>", Namespace="http://schemas.datacontract.org/2004/07/User.Common.Page")]
    [System.SerializableAttribute()]
    public partial class PageOfM_PatientDemoAccountExt : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private XYS.Remp.Screening.UserService.M_PatientDemoAccountExt[] PageOfResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public XYS.Remp.Screening.UserService.M_PatientDemoAccountExt[] PageOfResults {
            get {
                return this.PageOfResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.PageOfResultsField, value) != true)) {
                    this.PageOfResultsField = value;
                    this.RaisePropertyChanged("PageOfResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_PatientDemoAccountExt", Namespace="http://schemas.datacontract.org/2004/07/User.Model.DemoAccount")]
    [System.SerializableAttribute()]
    public partial class M_PatientDemoAccountExt : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientAccount {
            get {
                return this.PatientAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientAccountField, value) != true)) {
                    this.PatientAccountField = value;
                    this.RaisePropertyChanged("PatientAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_PatientDemoAccount", Namespace="http://schemas.datacontract.org/2004/07/User.Model.DemoAccount")]
    [System.SerializableAttribute()]
    public partial class M_PatientDemoAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DemoAccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DemoAccountId {
            get {
                return this.DemoAccountIdField;
            }
            set {
                if ((this.DemoAccountIdField.Equals(value) != true)) {
                    this.DemoAccountIdField = value;
                    this.RaisePropertyChanged("DemoAccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_ExpertToDepartment", Namespace="http://schemas.datacontract.org/2004/07/User.Model.Departmentinfo")]
    [System.SerializableAttribute()]
    public partial class M_ExpertToDepartment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DRELogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpertIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DRELogID {
            get {
                return this.DRELogIDField;
            }
            set {
                if ((this.DRELogIDField.Equals(value) != true)) {
                    this.DRELogIDField = value;
                    this.RaisePropertyChanged("DRELogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartID {
            get {
                return this.DepartIDField;
            }
            set {
                if ((this.DepartIDField.Equals(value) != true)) {
                    this.DepartIDField = value;
                    this.RaisePropertyChanged("DepartID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpertID {
            get {
                return this.ExpertIDField;
            }
            set {
                if ((this.ExpertIDField.Equals(value) != true)) {
                    this.ExpertIDField = value;
                    this.RaisePropertyChanged("ExpertID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_Doctorinfo", Namespace="http://schemas.datacontract.org/2004/07/User.Model.Doctorinfo")]
    [System.SerializableAttribute()]
    public partial class M_Doctorinfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BriefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte DrSexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte InvalidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brief {
            get {
                return this.BriefField;
            }
            set {
                if ((object.ReferenceEquals(this.BriefField, value) != true)) {
                    this.BriefField = value;
                    this.RaisePropertyChanged("Brief");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrAccount {
            get {
                return this.DrAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.DrAccountField, value) != true)) {
                    this.DrAccountField = value;
                    this.RaisePropertyChanged("DrAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrID {
            get {
                return this.DrIDField;
            }
            set {
                if ((this.DrIDField.Equals(value) != true)) {
                    this.DrIDField = value;
                    this.RaisePropertyChanged("DrID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrName {
            get {
                return this.DrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DrNameField, value) != true)) {
                    this.DrNameField = value;
                    this.RaisePropertyChanged("DrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte DrSex {
            get {
                return this.DrSexField;
            }
            set {
                if ((this.DrSexField.Equals(value) != true)) {
                    this.DrSexField = value;
                    this.RaisePropertyChanged("DrSex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte Invalid {
            get {
                return this.InvalidField;
            }
            set {
                if ((this.InvalidField.Equals(value) != true)) {
                    this.InvalidField = value;
                    this.RaisePropertyChanged("Invalid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgName {
            get {
                return this.OrgNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgNameField, value) != true)) {
                    this.OrgNameField = value;
                    this.RaisePropertyChanged("OrgName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageOf<M_Doctorinfo>", Namespace="http://schemas.datacontract.org/2004/07/User.Common.Page")]
    [System.SerializableAttribute()]
    public partial class PageOfM_Doctorinfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private XYS.Remp.Screening.UserService.M_Doctorinfo[] PageOfResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public XYS.Remp.Screening.UserService.M_Doctorinfo[] PageOfResults {
            get {
                return this.PageOfResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.PageOfResultsField, value) != true)) {
                    this.PageOfResultsField = value;
                    this.RaisePropertyChanged("PageOfResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_ManageTree", Namespace="http://schemas.datacontract.org/2004/07/User.Model.OrganizationManage")]
    [System.SerializableAttribute()]
    public partial class M_ManageTree : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_XysDoctorOrg", Namespace="http://schemas.datacontract.org/2004/07/User.Model.OrganizationManage")]
    [System.SerializableAttribute()]
    public partial class M_XysDoctorOrg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrID {
            get {
                return this.DrIDField;
            }
            set {
                if ((this.DrIDField.Equals(value) != true)) {
                    this.DrIDField = value;
                    this.RaisePropertyChanged("DrID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsDelete {
            get {
                return this.IsDeleteField;
            }
            set {
                if ((this.IsDeleteField.Equals(value) != true)) {
                    this.IsDeleteField = value;
                    this.RaisePropertyChanged("IsDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_OrgIdAndDrId", Namespace="http://schemas.datacontract.org/2004/07/User.Model.OrganizationManage")]
    [System.SerializableAttribute()]
    public partial class M_OrgIdAndDrId : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrID {
            get {
                return this.DrIDField;
            }
            set {
                if ((this.DrIDField.Equals(value) != true)) {
                    this.DrIDField = value;
                    this.RaisePropertyChanged("DrID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageOf<M_XysOrganization>", Namespace="http://schemas.datacontract.org/2004/07/User.Common.Page")]
    [System.SerializableAttribute()]
    public partial class PageOfM_XysOrganization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private XYS.Remp.Screening.UserService.M_XysOrganization[] PageOfResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public XYS.Remp.Screening.UserService.M_XysOrganization[] PageOfResults {
            get {
                return this.PageOfResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.PageOfResultsField, value) != true)) {
                    this.PageOfResultsField = value;
                    this.RaisePropertyChanged("PageOfResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_XysOrganization", Namespace="http://schemas.datacontract.org/2004/07/User.Model.OrganizationManage")]
    [System.SerializableAttribute()]
    public partial class M_XysOrganization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ManageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TreeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreaID {
            get {
                return this.AreaIDField;
            }
            set {
                if ((this.AreaIDField.Equals(value) != true)) {
                    this.AreaIDField = value;
                    this.RaisePropertyChanged("AreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrID {
            get {
                return this.DrIDField;
            }
            set {
                if ((this.DrIDField.Equals(value) != true)) {
                    this.DrIDField = value;
                    this.RaisePropertyChanged("DrID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ManageID {
            get {
                return this.ManageIDField;
            }
            set {
                if ((this.ManageIDField.Equals(value) != true)) {
                    this.ManageIDField = value;
                    this.RaisePropertyChanged("ManageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TreeName {
            get {
                return this.TreeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TreeNameField, value) != true)) {
                    this.TreeNameField = value;
                    this.RaisePropertyChanged("TreeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_PatientInfo", Namespace="http://schemas.datacontract.org/2004/07/User.Model.Patient")]
    [System.SerializableAttribute()]
    public partial class M_PatientInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AreaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BriefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CredNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte InvalidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsAcceptPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsAcceptSMSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsAcceptServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsAutoOutputReportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsFamilySMSWarnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsMeasureSMSWarnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsMobileVerifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte ManageStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MemberSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] OrgIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte PatientSexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] PatientTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte PayTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PicturePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TaskTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreaID {
            get {
                return this.AreaIDField;
            }
            set {
                if ((this.AreaIDField.Equals(value) != true)) {
                    this.AreaIDField = value;
                    this.RaisePropertyChanged("AreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brief {
            get {
                return this.BriefField;
            }
            set {
                if ((object.ReferenceEquals(this.BriefField, value) != true)) {
                    this.BriefField = value;
                    this.RaisePropertyChanged("Brief");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreateID {
            get {
                return this.CreateIDField;
            }
            set {
                if ((this.CreateIDField.Equals(value) != true)) {
                    this.CreateIDField = value;
                    this.RaisePropertyChanged("CreateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CredNO {
            get {
                return this.CredNOField;
            }
            set {
                if ((object.ReferenceEquals(this.CredNOField, value) != true)) {
                    this.CredNOField = value;
                    this.RaisePropertyChanged("CredNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Education {
            get {
                return this.EducationField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationField, value) != true)) {
                    this.EducationField = value;
                    this.RaisePropertyChanged("Education");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte Invalid {
            get {
                return this.InvalidField;
            }
            set {
                if ((this.InvalidField.Equals(value) != true)) {
                    this.InvalidField = value;
                    this.RaisePropertyChanged("Invalid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsAcceptPhone {
            get {
                return this.IsAcceptPhoneField;
            }
            set {
                if ((this.IsAcceptPhoneField.Equals(value) != true)) {
                    this.IsAcceptPhoneField = value;
                    this.RaisePropertyChanged("IsAcceptPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsAcceptSMS {
            get {
                return this.IsAcceptSMSField;
            }
            set {
                if ((this.IsAcceptSMSField.Equals(value) != true)) {
                    this.IsAcceptSMSField = value;
                    this.RaisePropertyChanged("IsAcceptSMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsAcceptService {
            get {
                return this.IsAcceptServiceField;
            }
            set {
                if ((this.IsAcceptServiceField.Equals(value) != true)) {
                    this.IsAcceptServiceField = value;
                    this.RaisePropertyChanged("IsAcceptService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsAutoOutputReport {
            get {
                return this.IsAutoOutputReportField;
            }
            set {
                if ((this.IsAutoOutputReportField.Equals(value) != true)) {
                    this.IsAutoOutputReportField = value;
                    this.RaisePropertyChanged("IsAutoOutputReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsFamilySMSWarn {
            get {
                return this.IsFamilySMSWarnField;
            }
            set {
                if ((this.IsFamilySMSWarnField.Equals(value) != true)) {
                    this.IsFamilySMSWarnField = value;
                    this.RaisePropertyChanged("IsFamilySMSWarn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsMeasureSMSWarn {
            get {
                return this.IsMeasureSMSWarnField;
            }
            set {
                if ((this.IsMeasureSMSWarnField.Equals(value) != true)) {
                    this.IsMeasureSMSWarnField = value;
                    this.RaisePropertyChanged("IsMeasureSMSWarn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsMobileVerify {
            get {
                return this.IsMobileVerifyField;
            }
            set {
                if ((this.IsMobileVerifyField.Equals(value) != true)) {
                    this.IsMobileVerifyField = value;
                    this.RaisePropertyChanged("IsMobileVerify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte ManageStatusID {
            get {
                return this.ManageStatusIDField;
            }
            set {
                if ((this.ManageStatusIDField.Equals(value) != true)) {
                    this.ManageStatusIDField = value;
                    this.RaisePropertyChanged("ManageStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberSource {
            get {
                return this.MemberSourceField;
            }
            set {
                if ((this.MemberSourceField.Equals(value) != true)) {
                    this.MemberSourceField = value;
                    this.RaisePropertyChanged("MemberSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nationality {
            get {
                return this.NationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityField, value) != true)) {
                    this.NationalityField = value;
                    this.RaisePropertyChanged("Nationality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgId {
            get {
                return this.OrgIdField;
            }
            set {
                if ((this.OrgIdField.Equals(value) != true)) {
                    this.OrgIdField = value;
                    this.RaisePropertyChanged("OrgId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] OrgIds {
            get {
                return this.OrgIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgIdsField, value) != true)) {
                    this.OrgIdsField = value;
                    this.RaisePropertyChanged("OrgIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientAccount {
            get {
                return this.PatientAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientAccountField, value) != true)) {
                    this.PatientAccountField = value;
                    this.RaisePropertyChanged("PatientAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte PatientSex {
            get {
                return this.PatientSexField;
            }
            set {
                if ((this.PatientSexField.Equals(value) != true)) {
                    this.PatientSexField = value;
                    this.RaisePropertyChanged("PatientSex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientType {
            get {
                return this.PatientTypeField;
            }
            set {
                if ((this.PatientTypeField.Equals(value) != true)) {
                    this.PatientTypeField = value;
                    this.RaisePropertyChanged("PatientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] PatientTypes {
            get {
                return this.PatientTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientTypesField, value) != true)) {
                    this.PatientTypesField = value;
                    this.RaisePropertyChanged("PatientTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte PayType {
            get {
                return this.PayTypeField;
            }
            set {
                if ((this.PayTypeField.Equals(value) != true)) {
                    this.PayTypeField = value;
                    this.RaisePropertyChanged("PayType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PicturePath {
            get {
                return this.PicturePathField;
            }
            set {
                if ((object.ReferenceEquals(this.PicturePathField, value) != true)) {
                    this.PicturePathField = value;
                    this.RaisePropertyChanged("PicturePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegDate {
            get {
                return this.RegDateField;
            }
            set {
                if ((this.RegDateField.Equals(value) != true)) {
                    this.RegDateField = value;
                    this.RaisePropertyChanged("RegDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TaskTime {
            get {
                return this.TaskTimeField;
            }
            set {
                if ((this.TaskTimeField.Equals(value) != true)) {
                    this.TaskTimeField = value;
                    this.RaisePropertyChanged("TaskTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_RegisterSmsLog", Namespace="http://schemas.datacontract.org/2004/07/User.Model.Api")]
    [System.SerializableAttribute()]
    public partial class M_RegisterSmsLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SmsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VerificationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertTime {
            get {
                return this.InsertTimeField;
            }
            set {
                if ((this.InsertTimeField.Equals(value) != true)) {
                    this.InsertTimeField = value;
                    this.RaisePropertyChanged("InsertTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgId {
            get {
                return this.OrgIdField;
            }
            set {
                if ((this.OrgIdField.Equals(value) != true)) {
                    this.OrgIdField = value;
                    this.RaisePropertyChanged("OrgId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SmsId {
            get {
                return this.SmsIdField;
            }
            set {
                if ((this.SmsIdField.Equals(value) != true)) {
                    this.SmsIdField = value;
                    this.RaisePropertyChanged("SmsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Verification {
            get {
                return this.VerificationField;
            }
            set {
                if ((object.ReferenceEquals(this.VerificationField, value) != true)) {
                    this.VerificationField = value;
                    this.RaisePropertyChanged("Verification");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_PatientAccount", Namespace="http://schemas.datacontract.org/2004/07/User.Model.Patient")]
    [System.SerializableAttribute()]
    public partial class M_PatientAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CheckIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CheckId {
            get {
                return this.CheckIdField;
            }
            set {
                if ((this.CheckIdField.Equals(value) != true)) {
                    this.CheckIdField = value;
                    this.RaisePropertyChanged("CheckId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Paid {
            get {
                return this.PaidField;
            }
            set {
                if ((this.PaidField.Equals(value) != true)) {
                    this.PaidField = value;
                    this.RaisePropertyChanged("Paid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientAccount {
            get {
                return this.PatientAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientAccountField, value) != true)) {
                    this.PatientAccountField = value;
                    this.RaisePropertyChanged("PatientAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_PatientGetListByOrgIdsQuery", Namespace="http://schemas.datacontract.org/2004/07/User.Model.Patient.Query")]
    [System.SerializableAttribute()]
    public partial class M_PatientGetListByOrgIdsQuery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuzzyFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] OrgIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuzzyField {
            get {
                return this.FuzzyFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FuzzyFieldField, value) != true)) {
                    this.FuzzyFieldField = value;
                    this.RaisePropertyChanged("FuzzyField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNew {
            get {
                return this.IsNewField;
            }
            set {
                if ((this.IsNewField.Equals(value) != true)) {
                    this.IsNewField = value;
                    this.RaisePropertyChanged("IsNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] OrgIds {
            get {
                return this.OrgIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgIdsField, value) != true)) {
                    this.OrgIdsField = value;
                    this.RaisePropertyChanged("OrgIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageOf<M_PatientInfo>", Namespace="http://schemas.datacontract.org/2004/07/User.Common.Page")]
    [System.SerializableAttribute()]
    public partial class PageOfM_PatientInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private XYS.Remp.Screening.UserService.M_PatientInfo[] PageOfResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public XYS.Remp.Screening.UserService.M_PatientInfo[] PageOfResults {
            get {
                return this.PageOfResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.PageOfResultsField, value) != true)) {
                    this.PageOfResultsField = value;
                    this.RaisePropertyChanged("PageOfResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_MemberFeaturesRecord", Namespace="http://schemas.datacontract.org/2004/07/User.Model.MemberFeatures")]
    [System.SerializableAttribute()]
    public partial class M_MemberFeaturesRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MFItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreateID {
            get {
                return this.CreateIDField;
            }
            set {
                if ((this.CreateIDField.Equals(value) != true)) {
                    this.CreateIDField = value;
                    this.RaisePropertyChanged("CreateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreateName {
            get {
                return this.CreateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateNameField, value) != true)) {
                    this.CreateNameField = value;
                    this.RaisePropertyChanged("CreateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MFItemID {
            get {
                return this.MFItemIDField;
            }
            set {
                if ((this.MFItemIDField.Equals(value) != true)) {
                    this.MFItemIDField = value;
                    this.RaisePropertyChanged("MFItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFItemName {
            get {
                return this.MFItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MFItemNameField, value) != true)) {
                    this.MFItemNameField = value;
                    this.RaisePropertyChanged("MFItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordID {
            get {
                return this.RecordIDField;
            }
            set {
                if ((this.RecordIDField.Equals(value) != true)) {
                    this.RecordIDField = value;
                    this.RaisePropertyChanged("RecordID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_Memberfeaturesrecordlog", Namespace="http://schemas.datacontract.org/2004/07/User.Model.MemberFeatures")]
    [System.SerializableAttribute()]
    public partial class M_Memberfeaturesrecordlog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DoctorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DoctorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MFItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperationTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RecordLogIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreateID {
            get {
                return this.CreateIDField;
            }
            set {
                if ((this.CreateIDField.Equals(value) != true)) {
                    this.CreateIDField = value;
                    this.RaisePropertyChanged("CreateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreateName {
            get {
                return this.CreateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateNameField, value) != true)) {
                    this.CreateNameField = value;
                    this.RaisePropertyChanged("CreateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DoctorID {
            get {
                return this.DoctorIDField;
            }
            set {
                if ((this.DoctorIDField.Equals(value) != true)) {
                    this.DoctorIDField = value;
                    this.RaisePropertyChanged("DoctorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoctorName {
            get {
                return this.DoctorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DoctorNameField, value) != true)) {
                    this.DoctorNameField = value;
                    this.RaisePropertyChanged("DoctorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrID {
            get {
                return this.DrIDField;
            }
            set {
                if ((this.DrIDField.Equals(value) != true)) {
                    this.DrIDField = value;
                    this.RaisePropertyChanged("DrID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrName {
            get {
                return this.DrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DrNameField, value) != true)) {
                    this.DrNameField = value;
                    this.RaisePropertyChanged("DrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MFItemID {
            get {
                return this.MFItemIDField;
            }
            set {
                if ((this.MFItemIDField.Equals(value) != true)) {
                    this.MFItemIDField = value;
                    this.RaisePropertyChanged("MFItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFItemName {
            get {
                return this.MFItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MFItemNameField, value) != true)) {
                    this.MFItemNameField = value;
                    this.RaisePropertyChanged("MFItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperationType {
            get {
                return this.OperationTypeField;
            }
            set {
                if ((this.OperationTypeField.Equals(value) != true)) {
                    this.OperationTypeField = value;
                    this.RaisePropertyChanged("OperationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordLogID {
            get {
                return this.RecordLogIDField;
            }
            set {
                if ((this.RecordLogIDField.Equals(value) != true)) {
                    this.RecordLogIDField = value;
                    this.RaisePropertyChanged("RecordLogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateID {
            get {
                return this.UpdateIDField;
            }
            set {
                if ((this.UpdateIDField.Equals(value) != true)) {
                    this.UpdateIDField = value;
                    this.RaisePropertyChanged("UpdateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateName {
            get {
                return this.UpdateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateNameField, value) != true)) {
                    this.UpdateNameField = value;
                    this.RaisePropertyChanged("UpdateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_MemberFeaturesType", Namespace="http://schemas.datacontract.org/2004/07/User.Model.MemberFeatures")]
    [System.SerializableAttribute()]
    public partial class M_MemberFeaturesType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsPushAppField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MFTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MFTypeLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MFTypeOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MFTypeParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFTypePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreateID {
            get {
                return this.CreateIDField;
            }
            set {
                if ((this.CreateIDField.Equals(value) != true)) {
                    this.CreateIDField = value;
                    this.RaisePropertyChanged("CreateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsPushApp {
            get {
                return this.IsPushAppField;
            }
            set {
                if ((this.IsPushAppField.Equals(value) != true)) {
                    this.IsPushAppField = value;
                    this.RaisePropertyChanged("IsPushApp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsSystem {
            get {
                return this.IsSystemField;
            }
            set {
                if ((this.IsSystemField.Equals(value) != true)) {
                    this.IsSystemField = value;
                    this.RaisePropertyChanged("IsSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MFTypeID {
            get {
                return this.MFTypeIDField;
            }
            set {
                if ((this.MFTypeIDField.Equals(value) != true)) {
                    this.MFTypeIDField = value;
                    this.RaisePropertyChanged("MFTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MFTypeLevel {
            get {
                return this.MFTypeLevelField;
            }
            set {
                if ((this.MFTypeLevelField.Equals(value) != true)) {
                    this.MFTypeLevelField = value;
                    this.RaisePropertyChanged("MFTypeLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFTypeName {
            get {
                return this.MFTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MFTypeNameField, value) != true)) {
                    this.MFTypeNameField = value;
                    this.RaisePropertyChanged("MFTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MFTypeOrder {
            get {
                return this.MFTypeOrderField;
            }
            set {
                if ((this.MFTypeOrderField.Equals(value) != true)) {
                    this.MFTypeOrderField = value;
                    this.RaisePropertyChanged("MFTypeOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MFTypeParentID {
            get {
                return this.MFTypeParentIDField;
            }
            set {
                if ((this.MFTypeParentIDField.Equals(value) != true)) {
                    this.MFTypeParentIDField = value;
                    this.RaisePropertyChanged("MFTypeParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFTypePath {
            get {
                return this.MFTypePathField;
            }
            set {
                if ((object.ReferenceEquals(this.MFTypePathField, value) != true)) {
                    this.MFTypePathField = value;
                    this.RaisePropertyChanged("MFTypePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateID {
            get {
                return this.UpdateIDField;
            }
            set {
                if ((this.UpdateIDField.Equals(value) != true)) {
                    this.UpdateIDField = value;
                    this.RaisePropertyChanged("UpdateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_MemberFeaturesItem", Namespace="http://schemas.datacontract.org/2004/07/User.Model.MemberFeatures")]
    [System.SerializableAttribute()]
    public partial class M_MemberFeaturesItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsSystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MFItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MFTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreateID {
            get {
                return this.CreateIDField;
            }
            set {
                if ((this.CreateIDField.Equals(value) != true)) {
                    this.CreateIDField = value;
                    this.RaisePropertyChanged("CreateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsSystem {
            get {
                return this.IsSystemField;
            }
            set {
                if ((this.IsSystemField.Equals(value) != true)) {
                    this.IsSystemField = value;
                    this.RaisePropertyChanged("IsSystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MFItemID {
            get {
                return this.MFItemIDField;
            }
            set {
                if ((this.MFItemIDField.Equals(value) != true)) {
                    this.MFItemIDField = value;
                    this.RaisePropertyChanged("MFItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFItemName {
            get {
                return this.MFItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MFItemNameField, value) != true)) {
                    this.MFItemNameField = value;
                    this.RaisePropertyChanged("MFItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MFTypeID {
            get {
                return this.MFTypeIDField;
            }
            set {
                if ((this.MFTypeIDField.Equals(value) != true)) {
                    this.MFTypeIDField = value;
                    this.RaisePropertyChanged("MFTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateID {
            get {
                return this.UpdateIDField;
            }
            set {
                if ((this.UpdateIDField.Equals(value) != true)) {
                    this.UpdateIDField = value;
                    this.RaisePropertyChanged("UpdateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_OrganizationInfo", Namespace="http://schemas.datacontract.org/2004/07/User.Model.OrganizationInfo")]
    [System.SerializableAttribute()]
    public partial class M_OrganizationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentOrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxNo {
            get {
                return this.FaxNoField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxNoField, value) != true)) {
                    this.FaxNoField = value;
                    this.RaisePropertyChanged("FaxNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgCode {
            get {
                return this.OrgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgCodeField, value) != true)) {
                    this.OrgCodeField = value;
                    this.RaisePropertyChanged("OrgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgFullName {
            get {
                return this.OrgFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgFullNameField, value) != true)) {
                    this.OrgFullNameField = value;
                    this.RaisePropertyChanged("OrgFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgName {
            get {
                return this.OrgNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgNameField, value) != true)) {
                    this.OrgNameField = value;
                    this.RaisePropertyChanged("OrgName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgType {
            get {
                return this.OrgTypeField;
            }
            set {
                if ((this.OrgTypeField.Equals(value) != true)) {
                    this.OrgTypeField = value;
                    this.RaisePropertyChanged("OrgType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentOrgID {
            get {
                return this.ParentOrgIDField;
            }
            set {
                if ((this.ParentOrgIDField.Equals(value) != true)) {
                    this.ParentOrgIDField = value;
                    this.RaisePropertyChanged("ParentOrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_PatientRelationInfo", Namespace="http://schemas.datacontract.org/2004/07/User.Model.Patient")]
    [System.SerializableAttribute()]
    public partial class M_PatientRelationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte CheckStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CredNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte InvalidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientRelIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientRelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientRelationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PicturePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelationtIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte UserSexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte CheckStatus {
            get {
                return this.CheckStatusField;
            }
            set {
                if ((this.CheckStatusField.Equals(value) != true)) {
                    this.CheckStatusField = value;
                    this.RaisePropertyChanged("CheckStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CredNO {
            get {
                return this.CredNOField;
            }
            set {
                if ((object.ReferenceEquals(this.CredNOField, value) != true)) {
                    this.CredNOField = value;
                    this.RaisePropertyChanged("CredNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Education {
            get {
                return this.EducationField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationField, value) != true)) {
                    this.EducationField = value;
                    this.RaisePropertyChanged("Education");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte Invalid {
            get {
                return this.InvalidField;
            }
            set {
                if ((this.InvalidField.Equals(value) != true)) {
                    this.InvalidField = value;
                    this.RaisePropertyChanged("Invalid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberType {
            get {
                return this.NumberTypeField;
            }
            set {
                if ((this.NumberTypeField.Equals(value) != true)) {
                    this.NumberTypeField = value;
                    this.RaisePropertyChanged("NumberType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberValue {
            get {
                return this.NumberValueField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberValueField, value) != true)) {
                    this.NumberValueField = value;
                    this.RaisePropertyChanged("NumberValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientRelID {
            get {
                return this.PatientRelIDField;
            }
            set {
                if ((this.PatientRelIDField.Equals(value) != true)) {
                    this.PatientRelIDField = value;
                    this.RaisePropertyChanged("PatientRelID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientRelName {
            get {
                return this.PatientRelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientRelNameField, value) != true)) {
                    this.PatientRelNameField = value;
                    this.RaisePropertyChanged("PatientRelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientRelation {
            get {
                return this.PatientRelationField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientRelationField, value) != true)) {
                    this.PatientRelationField = value;
                    this.RaisePropertyChanged("PatientRelation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PicturePath {
            get {
                return this.PicturePathField;
            }
            set {
                if ((object.ReferenceEquals(this.PicturePathField, value) != true)) {
                    this.PicturePathField = value;
                    this.RaisePropertyChanged("PicturePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelationtID {
            get {
                return this.RelationtIDField;
            }
            set {
                if ((this.RelationtIDField.Equals(value) != true)) {
                    this.RelationtIDField = value;
                    this.RaisePropertyChanged("RelationtID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte UserSex {
            get {
                return this.UserSexField;
            }
            set {
                if ((this.UserSexField.Equals(value) != true)) {
                    this.UserSexField = value;
                    this.RaisePropertyChanged("UserSex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_SupplementPatientInfo", Namespace="http://schemas.datacontract.org/2004/07/User.Model.Patient")]
    [System.SerializableAttribute()]
    public partial class M_SupplementPatientInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BloodGlucoseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DW_DField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DW_WField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FA_DField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FA_WField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuardianField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuardianshipsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HobbyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicalHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelationtIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SportItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SportNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SportTimeLenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BloodGlucose {
            get {
                return this.BloodGlucoseField;
            }
            set {
                if ((this.BloodGlucoseField.Equals(value) != true)) {
                    this.BloodGlucoseField = value;
                    this.RaisePropertyChanged("BloodGlucose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DW_D {
            get {
                return this.DW_DField;
            }
            set {
                if ((this.DW_DField.Equals(value) != true)) {
                    this.DW_DField = value;
                    this.RaisePropertyChanged("DW_D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DW_W {
            get {
                return this.DW_WField;
            }
            set {
                if ((this.DW_WField.Equals(value) != true)) {
                    this.DW_WField = value;
                    this.RaisePropertyChanged("DW_W");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FA_D {
            get {
                return this.FA_DField;
            }
            set {
                if ((this.FA_DField.Equals(value) != true)) {
                    this.FA_DField = value;
                    this.RaisePropertyChanged("FA_D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FA_W {
            get {
                return this.FA_WField;
            }
            set {
                if ((this.FA_WField.Equals(value) != true)) {
                    this.FA_WField = value;
                    this.RaisePropertyChanged("FA_W");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Guardian {
            get {
                return this.GuardianField;
            }
            set {
                if ((object.ReferenceEquals(this.GuardianField, value) != true)) {
                    this.GuardianField = value;
                    this.RaisePropertyChanged("Guardian");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Guardianships {
            get {
                return this.GuardianshipsField;
            }
            set {
                if ((object.ReferenceEquals(this.GuardianshipsField, value) != true)) {
                    this.GuardianshipsField = value;
                    this.RaisePropertyChanged("Guardianships");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hobby {
            get {
                return this.HobbyField;
            }
            set {
                if ((object.ReferenceEquals(this.HobbyField, value) != true)) {
                    this.HobbyField = value;
                    this.RaisePropertyChanged("Hobby");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalHistory {
            get {
                return this.MedicalHistoryField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalHistoryField, value) != true)) {
                    this.MedicalHistoryField = value;
                    this.RaisePropertyChanged("MedicalHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelationtID {
            get {
                return this.RelationtIDField;
            }
            set {
                if ((this.RelationtIDField.Equals(value) != true)) {
                    this.RelationtIDField = value;
                    this.RaisePropertyChanged("RelationtID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SInfoId {
            get {
                return this.SInfoIdField;
            }
            set {
                if ((this.SInfoIdField.Equals(value) != true)) {
                    this.SInfoIdField = value;
                    this.RaisePropertyChanged("SInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SportItem {
            get {
                return this.SportItemField;
            }
            set {
                if ((object.ReferenceEquals(this.SportItemField, value) != true)) {
                    this.SportItemField = value;
                    this.RaisePropertyChanged("SportItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SportNum {
            get {
                return this.SportNumField;
            }
            set {
                if ((this.SportNumField.Equals(value) != true)) {
                    this.SportNumField = value;
                    this.RaisePropertyChanged("SportNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SportTimeLen {
            get {
                return this.SportTimeLenField;
            }
            set {
                if ((this.SportTimeLenField.Equals(value) != true)) {
                    this.SportTimeLenField = value;
                    this.RaisePropertyChanged("SportTimeLen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte age {
            get {
                return this.ageField;
            }
            set {
                if ((this.ageField.Equals(value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte type {
            get {
                return this.typeField;
            }
            set {
                if ((this.typeField.Equals(value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_PatientExtendInfo", Namespace="http://schemas.datacontract.org/2004/07/User.Model.Patient")]
    [System.SerializableAttribute()]
    public partial class M_PatientExtendInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PatientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientRelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientRelationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RelationtIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientAccount {
            get {
                return this.PatientAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientAccountField, value) != true)) {
                    this.PatientAccountField = value;
                    this.RaisePropertyChanged("PatientAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PatientID {
            get {
                return this.PatientIDField;
            }
            set {
                if ((this.PatientIDField.Equals(value) != true)) {
                    this.PatientIDField = value;
                    this.RaisePropertyChanged("PatientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientRelName {
            get {
                return this.PatientRelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientRelNameField, value) != true)) {
                    this.PatientRelNameField = value;
                    this.RaisePropertyChanged("PatientRelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientRelation {
            get {
                return this.PatientRelationField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientRelationField, value) != true)) {
                    this.PatientRelationField = value;
                    this.RaisePropertyChanged("PatientRelation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RelationtID {
            get {
                return this.RelationtIDField;
            }
            set {
                if ((this.RelationtIDField.Equals(value) != true)) {
                    this.RelationtIDField = value;
                    this.RaisePropertyChanged("RelationtID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_Netdiagnosephrase", Namespace="http://schemas.datacontract.org/2004/07/User.Model.Specialist")]
    [System.SerializableAttribute()]
    public partial class M_Netdiagnosephrase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndCreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PhraseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartCreateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrId {
            get {
                return this.DrIdField;
            }
            set {
                if ((this.DrIdField.Equals(value) != true)) {
                    this.DrIdField = value;
                    this.RaisePropertyChanged("DrId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndCreateTime {
            get {
                return this.EndCreateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.EndCreateTimeField, value) != true)) {
                    this.EndCreateTimeField = value;
                    this.RaisePropertyChanged("EndCreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsDelete {
            get {
                return this.IsDeleteField;
            }
            set {
                if ((this.IsDeleteField.Equals(value) != true)) {
                    this.IsDeleteField = value;
                    this.RaisePropertyChanged("IsDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhraseId {
            get {
                return this.PhraseIdField;
            }
            set {
                if ((this.PhraseIdField.Equals(value) != true)) {
                    this.PhraseIdField = value;
                    this.RaisePropertyChanged("PhraseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartCreateTime {
            get {
                return this.StartCreateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartCreateTimeField, value) != true)) {
                    this.StartCreateTimeField = value;
                    this.RaisePropertyChanged("StartCreateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageOf<M_Netdiagnosephrase>", Namespace="http://schemas.datacontract.org/2004/07/User.Common.Page")]
    [System.SerializableAttribute()]
    public partial class PageOfM_Netdiagnosephrase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private XYS.Remp.Screening.UserService.M_Netdiagnosephrase[] PageOfResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public XYS.Remp.Screening.UserService.M_Netdiagnosephrase[] PageOfResults {
            get {
                return this.PageOfResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.PageOfResultsField, value) != true)) {
                    this.PageOfResultsField = value;
                    this.RaisePropertyChanged("PageOfResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCount {
            get {
                return this.TotalCountField;
            }
            set {
                if ((this.TotalCountField.Equals(value) != true)) {
                    this.TotalCountField = value;
                    this.RaisePropertyChanged("TotalCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_CategoryItem", Namespace="http://schemas.datacontract.org/2004/07/User.Model.Specialist")]
    [System.SerializableAttribute()]
    public partial class M_CategoryItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryItemValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryItemName {
            get {
                return this.CategoryItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryItemNameField, value) != true)) {
                    this.CategoryItemNameField = value;
                    this.RaisePropertyChanged("CategoryItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryItemValue {
            get {
                return this.CategoryItemValueField;
            }
            set {
                if ((this.CategoryItemValueField.Equals(value) != true)) {
                    this.CategoryItemValueField = value;
                    this.RaisePropertyChanged("CategoryItemValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_DepartmentInfo", Namespace="http://schemas.datacontract.org/2004/07/User.Model.Specialist")]
    [System.SerializableAttribute()]
    public partial class M_DepartmentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpertIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartID {
            get {
                return this.DepartIDField;
            }
            set {
                if ((this.DepartIDField.Equals(value) != true)) {
                    this.DepartIDField = value;
                    this.RaisePropertyChanged("DepartID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartName {
            get {
                return this.DepartNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartNameField, value) != true)) {
                    this.DepartNameField = value;
                    this.RaisePropertyChanged("DepartName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartParentID {
            get {
                return this.DepartParentIDField;
            }
            set {
                if ((this.DepartParentIDField.Equals(value) != true)) {
                    this.DepartParentIDField = value;
                    this.RaisePropertyChanged("DepartParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartPath {
            get {
                return this.DepartPathField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartPathField, value) != true)) {
                    this.DepartPathField = value;
                    this.RaisePropertyChanged("DepartPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpertID {
            get {
                return this.ExpertIDField;
            }
            set {
                if ((this.ExpertIDField.Equals(value) != true)) {
                    this.ExpertIDField = value;
                    this.RaisePropertyChanged("ExpertID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_Expertinfo", Namespace="http://schemas.datacontract.org/2004/07/User.Model.Specialist")]
    [System.SerializableAttribute()]
    public partial class M_Expertinfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppIDListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttentKnowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConsultNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DrIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpertCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpertEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpertGoodAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpertIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpertMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpertNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpertNickeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExpertOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpertPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpertPictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpertProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<sbyte> ExpertSexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<sbyte> ExpertTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte InvalidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsAllowAttentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsAllowConsultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsAllowNetDiagnoseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsAllowRecommendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsAllowReserveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsAllowReserveAppendField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private sbyte IsPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NetDiagnoseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetHospitalRegNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutPatientTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PersonalOrgIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RvpackrecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short WorkSaturationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppIDList {
            get {
                return this.AppIDListField;
            }
            set {
                if ((object.ReferenceEquals(this.AppIDListField, value) != true)) {
                    this.AppIDListField = value;
                    this.RaisePropertyChanged("AppIDList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttentKnow {
            get {
                return this.AttentKnowField;
            }
            set {
                if ((object.ReferenceEquals(this.AttentKnowField, value) != true)) {
                    this.AttentKnowField = value;
                    this.RaisePropertyChanged("AttentKnow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttentNumber {
            get {
                return this.AttentNumberField;
            }
            set {
                if ((this.AttentNumberField.Equals(value) != true)) {
                    this.AttentNumberField = value;
                    this.RaisePropertyChanged("AttentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConsultNumber {
            get {
                return this.ConsultNumberField;
            }
            set {
                if ((this.ConsultNumberField.Equals(value) != true)) {
                    this.ConsultNumberField = value;
                    this.RaisePropertyChanged("ConsultNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreateName {
            get {
                return this.CreateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateNameField, value) != true)) {
                    this.CreateNameField = value;
                    this.RaisePropertyChanged("CreateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrID {
            get {
                return this.DrIDField;
            }
            set {
                if ((this.DrIDField.Equals(value) != true)) {
                    this.DrIDField = value;
                    this.RaisePropertyChanged("DrID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpertCode {
            get {
                return this.ExpertCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertCodeField, value) != true)) {
                    this.ExpertCodeField = value;
                    this.RaisePropertyChanged("ExpertCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpertEmail {
            get {
                return this.ExpertEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertEmailField, value) != true)) {
                    this.ExpertEmailField = value;
                    this.RaisePropertyChanged("ExpertEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpertGoodAt {
            get {
                return this.ExpertGoodAtField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertGoodAtField, value) != true)) {
                    this.ExpertGoodAtField = value;
                    this.RaisePropertyChanged("ExpertGoodAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpertID {
            get {
                return this.ExpertIDField;
            }
            set {
                if ((this.ExpertIDField.Equals(value) != true)) {
                    this.ExpertIDField = value;
                    this.RaisePropertyChanged("ExpertID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpertMobile {
            get {
                return this.ExpertMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertMobileField, value) != true)) {
                    this.ExpertMobileField = value;
                    this.RaisePropertyChanged("ExpertMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpertName {
            get {
                return this.ExpertNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertNameField, value) != true)) {
                    this.ExpertNameField = value;
                    this.RaisePropertyChanged("ExpertName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpertNicke {
            get {
                return this.ExpertNickeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertNickeField, value) != true)) {
                    this.ExpertNickeField = value;
                    this.RaisePropertyChanged("ExpertNicke");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpertOrder {
            get {
                return this.ExpertOrderField;
            }
            set {
                if ((this.ExpertOrderField.Equals(value) != true)) {
                    this.ExpertOrderField = value;
                    this.RaisePropertyChanged("ExpertOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpertPhone {
            get {
                return this.ExpertPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertPhoneField, value) != true)) {
                    this.ExpertPhoneField = value;
                    this.RaisePropertyChanged("ExpertPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpertPicture {
            get {
                return this.ExpertPictureField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertPictureField, value) != true)) {
                    this.ExpertPictureField = value;
                    this.RaisePropertyChanged("ExpertPicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpertProfile {
            get {
                return this.ExpertProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpertProfileField, value) != true)) {
                    this.ExpertProfileField = value;
                    this.RaisePropertyChanged("ExpertProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<sbyte> ExpertSex {
            get {
                return this.ExpertSexField;
            }
            set {
                if ((this.ExpertSexField.Equals(value) != true)) {
                    this.ExpertSexField = value;
                    this.RaisePropertyChanged("ExpertSex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<sbyte> ExpertTitle {
            get {
                return this.ExpertTitleField;
            }
            set {
                if ((this.ExpertTitleField.Equals(value) != true)) {
                    this.ExpertTitleField = value;
                    this.RaisePropertyChanged("ExpertTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte Invalid {
            get {
                return this.InvalidField;
            }
            set {
                if ((this.InvalidField.Equals(value) != true)) {
                    this.InvalidField = value;
                    this.RaisePropertyChanged("Invalid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsAllowAttent {
            get {
                return this.IsAllowAttentField;
            }
            set {
                if ((this.IsAllowAttentField.Equals(value) != true)) {
                    this.IsAllowAttentField = value;
                    this.RaisePropertyChanged("IsAllowAttent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsAllowConsult {
            get {
                return this.IsAllowConsultField;
            }
            set {
                if ((this.IsAllowConsultField.Equals(value) != true)) {
                    this.IsAllowConsultField = value;
                    this.RaisePropertyChanged("IsAllowConsult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsAllowNetDiagnose {
            get {
                return this.IsAllowNetDiagnoseField;
            }
            set {
                if ((this.IsAllowNetDiagnoseField.Equals(value) != true)) {
                    this.IsAllowNetDiagnoseField = value;
                    this.RaisePropertyChanged("IsAllowNetDiagnose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsAllowRecommend {
            get {
                return this.IsAllowRecommendField;
            }
            set {
                if ((this.IsAllowRecommendField.Equals(value) != true)) {
                    this.IsAllowRecommendField = value;
                    this.RaisePropertyChanged("IsAllowRecommend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsAllowReserve {
            get {
                return this.IsAllowReserveField;
            }
            set {
                if ((this.IsAllowReserveField.Equals(value) != true)) {
                    this.IsAllowReserveField = value;
                    this.RaisePropertyChanged("IsAllowReserve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsAllowReserveAppend {
            get {
                return this.IsAllowReserveAppendField;
            }
            set {
                if ((this.IsAllowReserveAppendField.Equals(value) != true)) {
                    this.IsAllowReserveAppendField = value;
                    this.RaisePropertyChanged("IsAllowReserveAppend");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public sbyte IsPublic {
            get {
                return this.IsPublicField;
            }
            set {
                if ((this.IsPublicField.Equals(value) != true)) {
                    this.IsPublicField = value;
                    this.RaisePropertyChanged("IsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NetDiagnoseNumber {
            get {
                return this.NetDiagnoseNumberField;
            }
            set {
                if ((this.NetDiagnoseNumberField.Equals(value) != true)) {
                    this.NetDiagnoseNumberField = value;
                    this.RaisePropertyChanged("NetDiagnoseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetHospitalRegNo {
            get {
                return this.NetHospitalRegNoField;
            }
            set {
                if ((object.ReferenceEquals(this.NetHospitalRegNoField, value) != true)) {
                    this.NetHospitalRegNoField = value;
                    this.RaisePropertyChanged("NetHospitalRegNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrgID {
            get {
                return this.OrgIDField;
            }
            set {
                if ((this.OrgIDField.Equals(value) != true)) {
                    this.OrgIDField = value;
                    this.RaisePropertyChanged("OrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutPatientTimes {
            get {
                return this.OutPatientTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.OutPatientTimesField, value) != true)) {
                    this.OutPatientTimesField = value;
                    this.RaisePropertyChanged("OutPatientTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PersonalOrgID {
            get {
                return this.PersonalOrgIDField;
            }
            set {
                if ((this.PersonalOrgIDField.Equals(value) != true)) {
                    this.PersonalOrgIDField = value;
                    this.RaisePropertyChanged("PersonalOrgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rvpackrecords {
            get {
                return this.RvpackrecordsField;
            }
            set {
                if ((this.RvpackrecordsField.Equals(value) != true)) {
                    this.RvpackrecordsField = value;
                    this.RaisePropertyChanged("Rvpackrecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateName {
            get {
                return this.UpdateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateNameField, value) != true)) {
                    this.UpdateNameField = value;
                    this.RaisePropertyChanged("UpdateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short WorkSaturation {
            get {
                return this.WorkSaturationField;
            }
            set {
                if ((this.WorkSaturationField.Equals(value) != true)) {
                    this.WorkSaturationField = value;
                    this.RaisePropertyChanged("WorkSaturation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IDemoAccountService")]
    public interface IDemoAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoAccountService/GetDemoAccountList", ReplyAction="http://tempuri.org/IDemoAccountService/GetDemoAccountListResponse")]
        XYS.Remp.Screening.UserService.PageOfM_DemoAccount GetDemoAccountList(string account, string userName, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoAccountService/GetDemoAccount", ReplyAction="http://tempuri.org/IDemoAccountService/GetDemoAccountResponse")]
        XYS.Remp.Screening.UserService.M_DemoAccount GetDemoAccount(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoAccountService/GetDemoAccountByPatientId", ReplyAction="http://tempuri.org/IDemoAccountService/GetDemoAccountByPatientIdResponse")]
        XYS.Remp.Screening.UserService.M_DemoAccount GetDemoAccountByPatientId(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoAccountService/SaveDemoAccount", ReplyAction="http://tempuri.org/IDemoAccountService/SaveDemoAccountResponse")]
        int SaveDemoAccount(XYS.Remp.Screening.UserService.M_DemoAccount demoAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoAccountService/RmoveDemoAccount", ReplyAction="http://tempuri.org/IDemoAccountService/RmoveDemoAccountResponse")]
        bool RmoveDemoAccount(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoAccountService/GetPatientDemoAccountList", ReplyAction="http://tempuri.org/IDemoAccountService/GetPatientDemoAccountListResponse")]
        XYS.Remp.Screening.UserService.PageOfM_PatientDemoAccountExt GetPatientDemoAccountList(int demoAccountId, string userName, string phone, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoAccountService/AddDemoAccountRelation", ReplyAction="http://tempuri.org/IDemoAccountService/AddDemoAccountRelationResponse")]
        int AddDemoAccountRelation(XYS.Remp.Screening.UserService.M_PatientDemoAccount relation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoAccountService/RemoveDemoAccountRelation", ReplyAction="http://tempuri.org/IDemoAccountService/RemoveDemoAccountRelationResponse")]
        bool RemoveDemoAccountRelation(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDemoAccountServiceChannel : XYS.Remp.Screening.UserService.IDemoAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DemoAccountServiceClient : System.ServiceModel.ClientBase<XYS.Remp.Screening.UserService.IDemoAccountService>, XYS.Remp.Screening.UserService.IDemoAccountService {
        
        public DemoAccountServiceClient() {
        }
        
        public DemoAccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DemoAccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DemoAccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DemoAccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public XYS.Remp.Screening.UserService.PageOfM_DemoAccount GetDemoAccountList(string account, string userName, int pageIndex, int pageSize) {
            return base.Channel.GetDemoAccountList(account, userName, pageIndex, pageSize);
        }
        
        public XYS.Remp.Screening.UserService.M_DemoAccount GetDemoAccount(int id) {
            return base.Channel.GetDemoAccount(id);
        }
        
        public XYS.Remp.Screening.UserService.M_DemoAccount GetDemoAccountByPatientId(int patientId) {
            return base.Channel.GetDemoAccountByPatientId(patientId);
        }
        
        public int SaveDemoAccount(XYS.Remp.Screening.UserService.M_DemoAccount demoAccount) {
            return base.Channel.SaveDemoAccount(demoAccount);
        }
        
        public bool RmoveDemoAccount(int id) {
            return base.Channel.RmoveDemoAccount(id);
        }
        
        public XYS.Remp.Screening.UserService.PageOfM_PatientDemoAccountExt GetPatientDemoAccountList(int demoAccountId, string userName, string phone, int pageIndex, int pageSize) {
            return base.Channel.GetPatientDemoAccountList(demoAccountId, userName, phone, pageIndex, pageSize);
        }
        
        public int AddDemoAccountRelation(XYS.Remp.Screening.UserService.M_PatientDemoAccount relation) {
            return base.Channel.AddDemoAccountRelation(relation);
        }
        
        public bool RemoveDemoAccountRelation(int id) {
            return base.Channel.RemoveDemoAccountRelation(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IDepartmentinfoService")]
    public interface IDepartmentinfoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentinfoService/DelDepartRelateByExpertID", ReplyAction="http://tempuri.org/IDepartmentinfoService/DelDepartRelateByExpertIDResponse")]
        bool DelDepartRelateByExpertID(int expertID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentinfoService/AddExpertToDepartment", ReplyAction="http://tempuri.org/IDepartmentinfoService/AddExpertToDepartmentResponse")]
        bool AddExpertToDepartment(XYS.Remp.Screening.UserService.M_ExpertToDepartment expertToDepartment);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDepartmentinfoServiceChannel : XYS.Remp.Screening.UserService.IDepartmentinfoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DepartmentinfoServiceClient : System.ServiceModel.ClientBase<XYS.Remp.Screening.UserService.IDepartmentinfoService>, XYS.Remp.Screening.UserService.IDepartmentinfoService {
        
        public DepartmentinfoServiceClient() {
        }
        
        public DepartmentinfoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DepartmentinfoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentinfoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentinfoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool DelDepartRelateByExpertID(int expertID) {
            return base.Channel.DelDepartRelateByExpertID(expertID);
        }
        
        public bool AddExpertToDepartment(XYS.Remp.Screening.UserService.M_ExpertToDepartment expertToDepartment) {
            return base.Channel.AddExpertToDepartment(expertToDepartment);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IDoctorinfoService")]
    public interface IDoctorinfoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctorinfoService/GetDoctorinfoByDrID", ReplyAction="http://tempuri.org/IDoctorinfoService/GetDoctorinfoByDrIDResponse")]
        XYS.Remp.Screening.UserService.M_Doctorinfo GetDoctorinfoByDrID(int drId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctorinfoService/UpdateDoctorinfo", ReplyAction="http://tempuri.org/IDoctorinfoService/UpdateDoctorinfoResponse")]
        bool UpdateDoctorinfo(XYS.Remp.Screening.UserService.M_Doctorinfo doctorinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctorinfoService/UpdateSingleDoctorinfo", ReplyAction="http://tempuri.org/IDoctorinfoService/UpdateSingleDoctorinfoResponse")]
        bool UpdateSingleDoctorinfo(string type, string value, int drId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctorinfoService/GetDoctorinfoByDrIDs", ReplyAction="http://tempuri.org/IDoctorinfoService/GetDoctorinfoByDrIDsResponse")]
        XYS.Remp.Screening.UserService.M_Doctorinfo[] GetDoctorinfoByDrIDs(string drIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctorinfoService/GetDoctorListByCondition", ReplyAction="http://tempuri.org/IDoctorinfoService/GetDoctorListByConditionResponse")]
        XYS.Remp.Screening.UserService.PageOfM_Doctorinfo GetDoctorListByCondition(string drName, string drAccount, int pageIndex, int pageSize);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDoctorinfoServiceChannel : XYS.Remp.Screening.UserService.IDoctorinfoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoctorinfoServiceClient : System.ServiceModel.ClientBase<XYS.Remp.Screening.UserService.IDoctorinfoService>, XYS.Remp.Screening.UserService.IDoctorinfoService {
        
        public DoctorinfoServiceClient() {
        }
        
        public DoctorinfoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DoctorinfoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DoctorinfoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DoctorinfoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public XYS.Remp.Screening.UserService.M_Doctorinfo GetDoctorinfoByDrID(int drId) {
            return base.Channel.GetDoctorinfoByDrID(drId);
        }
        
        public bool UpdateDoctorinfo(XYS.Remp.Screening.UserService.M_Doctorinfo doctorinfo) {
            return base.Channel.UpdateDoctorinfo(doctorinfo);
        }
        
        public bool UpdateSingleDoctorinfo(string type, string value, int drId) {
            return base.Channel.UpdateSingleDoctorinfo(type, value, drId);
        }
        
        public XYS.Remp.Screening.UserService.M_Doctorinfo[] GetDoctorinfoByDrIDs(string drIds) {
            return base.Channel.GetDoctorinfoByDrIDs(drIds);
        }
        
        public XYS.Remp.Screening.UserService.PageOfM_Doctorinfo GetDoctorListByCondition(string drName, string drAccount, int pageIndex, int pageSize) {
            return base.Channel.GetDoctorListByCondition(drName, drAccount, pageIndex, pageSize);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IManageTreeService")]
    public interface IManageTreeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageTreeService/IManageTreeService_Get", ReplyAction="http://tempuri.org/IManageTreeService/IManageTreeService_GetResponse")]
        XYS.Remp.Screening.UserService.M_ManageTree IManageTreeService_Get(int id, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageTreeService/GetChildNodesById", ReplyAction="http://tempuri.org/IManageTreeService/GetChildNodesByIdResponse")]
        XYS.Remp.Screening.UserService.M_ManageTree[] GetChildNodesById(int id, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageTreeService/IManageTreeService_Add", ReplyAction="http://tempuri.org/IManageTreeService/IManageTreeService_AddResponse")]
        int IManageTreeService_Add(XYS.Remp.Screening.UserService.M_ManageTree manageTree, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageTreeService/IManageTreeService_Update", ReplyAction="http://tempuri.org/IManageTreeService/IManageTreeService_UpdateResponse")]
        int IManageTreeService_Update(XYS.Remp.Screening.UserService.M_ManageTree manageTree, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageTreeService/IManageTreeService_Remove", ReplyAction="http://tempuri.org/IManageTreeService/IManageTreeService_RemoveResponse")]
        bool IManageTreeService_Remove(int id, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageTreeService/MoveOrgToOrg", ReplyAction="http://tempuri.org/IManageTreeService/MoveOrgToOrgResponse")]
        void MoveOrgToOrg(int id, int newParentId, int flag);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManageTreeServiceChannel : XYS.Remp.Screening.UserService.IManageTreeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManageTreeServiceClient : System.ServiceModel.ClientBase<XYS.Remp.Screening.UserService.IManageTreeService>, XYS.Remp.Screening.UserService.IManageTreeService {
        
        public ManageTreeServiceClient() {
        }
        
        public ManageTreeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManageTreeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManageTreeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManageTreeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public XYS.Remp.Screening.UserService.M_ManageTree IManageTreeService_Get(int id, int flag) {
            return base.Channel.IManageTreeService_Get(id, flag);
        }
        
        public XYS.Remp.Screening.UserService.M_ManageTree[] GetChildNodesById(int id, int flag) {
            return base.Channel.GetChildNodesById(id, flag);
        }
        
        public int IManageTreeService_Add(XYS.Remp.Screening.UserService.M_ManageTree manageTree, int flag) {
            return base.Channel.IManageTreeService_Add(manageTree, flag);
        }
        
        public int IManageTreeService_Update(XYS.Remp.Screening.UserService.M_ManageTree manageTree, int flag) {
            return base.Channel.IManageTreeService_Update(manageTree, flag);
        }
        
        public bool IManageTreeService_Remove(int id, int flag) {
            return base.Channel.IManageTreeService_Remove(id, flag);
        }
        
        public void MoveOrgToOrg(int id, int newParentId, int flag) {
            base.Channel.MoveOrgToOrg(id, newParentId, flag);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IXysDoctorOrgService")]
    public interface IXysDoctorOrgService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysDoctorOrgService/GetXysDoctorOrgListByDoctorId", ReplyAction="http://tempuri.org/IXysDoctorOrgService/GetXysDoctorOrgListByDoctorIdResponse")]
        XYS.Remp.Screening.UserService.M_XysDoctorOrg[] GetXysDoctorOrgListByDoctorId(int doctorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysDoctorOrgService/GetOrgIdsAndDrIdsByDrIds", ReplyAction="http://tempuri.org/IXysDoctorOrgService/GetOrgIdsAndDrIdsByDrIdsResponse")]
        XYS.Remp.Screening.UserService.M_OrgIdAndDrId[] GetOrgIdsAndDrIdsByDrIds(int[] drIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysDoctorOrgService/AddXysDoctorOrgByList", ReplyAction="http://tempuri.org/IXysDoctorOrgService/AddXysDoctorOrgByListResponse")]
        bool AddXysDoctorOrgByList(XYS.Remp.Screening.UserService.M_XysDoctorOrg[] list, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysDoctorOrgService/DeleteXysDoctorOrgByDrId", ReplyAction="http://tempuri.org/IXysDoctorOrgService/DeleteXysDoctorOrgByDrIdResponse")]
        int DeleteXysDoctorOrgByDrId(int drId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysDoctorOrgService/UpDateXysDoctorOrgIsDeleteByDrId", ReplyAction="http://tempuri.org/IXysDoctorOrgService/UpDateXysDoctorOrgIsDeleteByDrIdResponse")]
        int UpDateXysDoctorOrgIsDeleteByDrId(int[] drIds, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysDoctorOrgService/DeleteXysDoctorOrgByIsDelete", ReplyAction="http://tempuri.org/IXysDoctorOrgService/DeleteXysDoctorOrgByIsDeleteResponse")]
        int DeleteXysDoctorOrgByIsDelete(int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysDoctorOrgService/RefreshXysDoctorOrg", ReplyAction="http://tempuri.org/IXysDoctorOrgService/RefreshXysDoctorOrgResponse")]
        bool RefreshXysDoctorOrg(XYS.Remp.Screening.UserService.M_XysDoctorOrg[] list, int flag);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IXysDoctorOrgServiceChannel : XYS.Remp.Screening.UserService.IXysDoctorOrgService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XysDoctorOrgServiceClient : System.ServiceModel.ClientBase<XYS.Remp.Screening.UserService.IXysDoctorOrgService>, XYS.Remp.Screening.UserService.IXysDoctorOrgService {
        
        public XysDoctorOrgServiceClient() {
        }
        
        public XysDoctorOrgServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public XysDoctorOrgServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XysDoctorOrgServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XysDoctorOrgServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public XYS.Remp.Screening.UserService.M_XysDoctorOrg[] GetXysDoctorOrgListByDoctorId(int doctorId) {
            return base.Channel.GetXysDoctorOrgListByDoctorId(doctorId);
        }
        
        public XYS.Remp.Screening.UserService.M_OrgIdAndDrId[] GetOrgIdsAndDrIdsByDrIds(int[] drIds) {
            return base.Channel.GetOrgIdsAndDrIdsByDrIds(drIds);
        }
        
        public bool AddXysDoctorOrgByList(XYS.Remp.Screening.UserService.M_XysDoctorOrg[] list, int flag) {
            return base.Channel.AddXysDoctorOrgByList(list, flag);
        }
        
        public int DeleteXysDoctorOrgByDrId(int drId, int flag) {
            return base.Channel.DeleteXysDoctorOrgByDrId(drId, flag);
        }
        
        public int UpDateXysDoctorOrgIsDeleteByDrId(int[] drIds, int flag) {
            return base.Channel.UpDateXysDoctorOrgIsDeleteByDrId(drIds, flag);
        }
        
        public int DeleteXysDoctorOrgByIsDelete(int flag) {
            return base.Channel.DeleteXysDoctorOrgByIsDelete(flag);
        }
        
        public bool RefreshXysDoctorOrg(XYS.Remp.Screening.UserService.M_XysDoctorOrg[] list, int flag) {
            return base.Channel.RefreshXysDoctorOrg(list, flag);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IXysOrganizationService")]
    public interface IXysOrganizationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysOrganizationService/GetListByOrgId", ReplyAction="http://tempuri.org/IXysOrganizationService/GetListByOrgIdResponse")]
        XYS.Remp.Screening.UserService.PageOfM_XysOrganization GetListByOrgId(int manageId, string account, string name, string phone, bool includeChild, int pageIndex, int pageSize, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysOrganizationService/GetDoctorTreeRelationIds", ReplyAction="http://tempuri.org/IXysOrganizationService/GetDoctorTreeRelationIdsResponse")]
        string GetDoctorTreeRelationIds(int manageId, string account, string name, string phone, bool includeChild, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysOrganizationService/IXysOrganizationService_Add", ReplyAction="http://tempuri.org/IXysOrganizationService/IXysOrganizationService_AddResponse")]
        int IXysOrganizationService_Add(XYS.Remp.Screening.UserService.M_XysOrganization orgInfo, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysOrganizationService/IXysOrganizationService_Remove", ReplyAction="http://tempuri.org/IXysOrganizationService/IXysOrganizationService_RemoveResponse" +
            "")]
        bool IXysOrganizationService_Remove(int manageId, int drId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysOrganizationService/GetMXysOrganizationByDrId", ReplyAction="http://tempuri.org/IXysOrganizationService/GetMXysOrganizationByDrIdResponse")]
        XYS.Remp.Screening.UserService.M_XysOrganization GetMXysOrganizationByDrId(int drId, int manageId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysOrganizationService/GetDrIdByTreeLeaf", ReplyAction="http://tempuri.org/IXysOrganizationService/GetDrIdByTreeLeafResponse")]
        int[] GetDrIdByTreeLeaf(int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysOrganizationService/GetDrIdByTree", ReplyAction="http://tempuri.org/IXysOrganizationService/GetDrIdByTreeResponse")]
        int[] GetDrIdByTree(int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysOrganizationService/MoveMemberToOrg", ReplyAction="http://tempuri.org/IXysOrganizationService/MoveMemberToOrgResponse")]
        bool MoveMemberToOrg(int id, int newOrgId, int flag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXysOrganizationService/GetXysOrganizationById", ReplyAction="http://tempuri.org/IXysOrganizationService/GetXysOrganizationByIdResponse")]
        XYS.Remp.Screening.UserService.M_XysOrganization GetXysOrganizationById(int id, int flag);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IXysOrganizationServiceChannel : XYS.Remp.Screening.UserService.IXysOrganizationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XysOrganizationServiceClient : System.ServiceModel.ClientBase<XYS.Remp.Screening.UserService.IXysOrganizationService>, XYS.Remp.Screening.UserService.IXysOrganizationService {
        
        public XysOrganizationServiceClient() {
        }
        
        public XysOrganizationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public XysOrganizationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XysOrganizationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XysOrganizationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public XYS.Remp.Screening.UserService.PageOfM_XysOrganization GetListByOrgId(int manageId, string account, string name, string phone, bool includeChild, int pageIndex, int pageSize, int flag) {
            return base.Channel.GetListByOrgId(manageId, account, name, phone, includeChild, pageIndex, pageSize, flag);
        }
        
        public string GetDoctorTreeRelationIds(int manageId, string account, string name, string phone, bool includeChild, int flag) {
            return base.Channel.GetDoctorTreeRelationIds(manageId, account, name, phone, includeChild, flag);
        }
        
        public int IXysOrganizationService_Add(XYS.Remp.Screening.UserService.M_XysOrganization orgInfo, int flag) {
            return base.Channel.IXysOrganizationService_Add(orgInfo, flag);
        }
        
        public bool IXysOrganizationService_Remove(int manageId, int drId, int flag) {
            return base.Channel.IXysOrganizationService_Remove(manageId, drId, flag);
        }
        
        public XYS.Remp.Screening.UserService.M_XysOrganization GetMXysOrganizationByDrId(int drId, int manageId, int flag) {
            return base.Channel.GetMXysOrganizationByDrId(drId, manageId, flag);
        }
        
        public int[] GetDrIdByTreeLeaf(int flag) {
            return base.Channel.GetDrIdByTreeLeaf(flag);
        }
        
        public int[] GetDrIdByTree(int flag) {
            return base.Channel.GetDrIdByTree(flag);
        }
        
        public bool MoveMemberToOrg(int id, int newOrgId, int flag) {
            return base.Channel.MoveMemberToOrg(id, newOrgId, flag);
        }
        
        public XYS.Remp.Screening.UserService.M_XysOrganization GetXysOrganizationById(int id, int flag) {
            return base.Channel.GetXysOrganizationById(id, flag);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IPatientService")]
    public interface IPatientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CreatePatientInfo", ReplyAction="http://tempuri.org/IPatientService/CreatePatientInfoResponse")]
        XYS.Remp.Screening.UserService.M_PatientInfo CreatePatientInfo(string account, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/UpdatePatientInfoById", ReplyAction="http://tempuri.org/IPatientService/UpdatePatientInfoByIdResponse")]
        int UpdatePatientInfoById(XYS.Remp.Screening.UserService.M_PatientInfo patientInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CheckPatientAccountExist", ReplyAction="http://tempuri.org/IPatientService/CheckPatientAccountExistResponse")]
        bool CheckPatientAccountExist(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/AddResisterSmsLog", ReplyAction="http://tempuri.org/IPatientService/AddResisterSmsLogResponse")]
        bool AddResisterSmsLog(XYS.Remp.Screening.UserService.M_RegisterSmsLog entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetVerificaton", ReplyAction="http://tempuri.org/IPatientService/GetVerificatonResponse")]
        XYS.Remp.Screening.UserService.M_RegisterSmsLog GetVerificaton(string mobile, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CheckMobileExist", ReplyAction="http://tempuri.org/IPatientService/CheckMobileExistResponse")]
        bool CheckMobileExist(string mobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientInfoByMobile", ReplyAction="http://tempuri.org/IPatientService/GetPatientInfoByMobileResponse")]
        XYS.Remp.Screening.UserService.M_PatientInfo[] GetPatientInfoByMobile(string mobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/SetVerificationDisable", ReplyAction="http://tempuri.org/IPatientService/SetVerificationDisableResponse")]
        bool SetVerificationDisable(int smsId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientInfoById", ReplyAction="http://tempuri.org/IPatientService/GetPatientInfoByIdResponse")]
        XYS.Remp.Screening.UserService.M_PatientInfo GetPatientInfoById(int PatientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientAccountByPatientId", ReplyAction="http://tempuri.org/IPatientService/GetPatientAccountByPatientIdResponse")]
        XYS.Remp.Screening.UserService.M_PatientAccount[] GetPatientAccountByPatientId(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientByOrgIds", ReplyAction="http://tempuri.org/IPatientService/GetPatientByOrgIdsResponse")]
        XYS.Remp.Screening.UserService.PageOfM_PatientInfo GetPatientByOrgIds(XYS.Remp.Screening.UserService.M_PatientGetListByOrgIdsQuery model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/InsertPatientInfoBySpecialist", ReplyAction="http://tempuri.org/IPatientService/InsertPatientInfoBySpecialistResponse")]
        int InsertPatientInfoBySpecialist(XYS.Remp.Screening.UserService.M_PatientInfo model, int orgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetFeaturesRecordsByPatientId", ReplyAction="http://tempuri.org/IPatientService/GetFeaturesRecordsByPatientIdResponse")]
        XYS.Remp.Screening.UserService.M_MemberFeaturesRecord[] GetFeaturesRecordsByPatientId(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/InsertFeaturesRecord", ReplyAction="http://tempuri.org/IPatientService/InsertFeaturesRecordResponse")]
        int InsertFeaturesRecord(XYS.Remp.Screening.UserService.M_MemberFeaturesRecord[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/DelFeaturesRecord", ReplyAction="http://tempuri.org/IPatientService/DelFeaturesRecordResponse")]
        bool DelFeaturesRecord(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/InsertFeaturesLogBatch", ReplyAction="http://tempuri.org/IPatientService/InsertFeaturesLogBatchResponse")]
        int InsertFeaturesLogBatch(XYS.Remp.Screening.UserService.M_Memberfeaturesrecordlog[] list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/InsertFeaturesLog", ReplyAction="http://tempuri.org/IPatientService/InsertFeaturesLogResponse")]
        int InsertFeaturesLog(XYS.Remp.Screening.UserService.M_Memberfeaturesrecordlog model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetFeaturesTypeList", ReplyAction="http://tempuri.org/IPatientService/GetFeaturesTypeListResponse")]
        XYS.Remp.Screening.UserService.M_MemberFeaturesType[] GetFeaturesTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetFeaturesItemByType", ReplyAction="http://tempuri.org/IPatientService/GetFeaturesItemByTypeResponse")]
        XYS.Remp.Screening.UserService.M_MemberFeaturesItem[] GetFeaturesItemByType(int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/UpdatePatientInfoBySpecialist", ReplyAction="http://tempuri.org/IPatientService/UpdatePatientInfoBySpecialistResponse")]
        bool UpdatePatientInfoBySpecialist(XYS.Remp.Screening.UserService.M_PatientInfo model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientByMobileAndName", ReplyAction="http://tempuri.org/IPatientService/GetPatientByMobileAndNameResponse")]
        XYS.Remp.Screening.UserService.M_PatientInfo[] GetPatientByMobileAndName(string mobile, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetFeaturesItemByIds", ReplyAction="http://tempuri.org/IPatientService/GetFeaturesItemByIdsResponse")]
        XYS.Remp.Screening.UserService.M_MemberFeaturesItem[] GetFeaturesItemByIds(int[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientInfoByIdForSpecialist", ReplyAction="http://tempuri.org/IPatientService/GetPatientInfoByIdForSpecialistResponse")]
        XYS.Remp.Screening.UserService.M_PatientInfo GetPatientInfoByIdForSpecialist(int patientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetOrgInfoByIds", ReplyAction="http://tempuri.org/IPatientService/GetOrgInfoByIdsResponse")]
        XYS.Remp.Screening.UserService.M_OrganizationInfo[] GetOrgInfoByIds(int[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetFeaturesRecordByPatientIdAndItemId", ReplyAction="http://tempuri.org/IPatientService/GetFeaturesRecordByPatientIdAndItemIdResponse")]
        XYS.Remp.Screening.UserService.M_MemberFeaturesRecord GetFeaturesRecordByPatientIdAndItemId(int patientId, int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetFeaturesRecordsByPatientIdAndItemIds", ReplyAction="http://tempuri.org/IPatientService/GetFeaturesRecordsByPatientIdAndItemIdsRespons" +
            "e")]
        XYS.Remp.Screening.UserService.M_MemberFeaturesRecord[] GetFeaturesRecordsByPatientIdAndItemIds(int patientId, int[] itemIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/DelFeaturesRecordByPatientIdAndItemIds", ReplyAction="http://tempuri.org/IPatientService/DelFeaturesRecordByPatientIdAndItemIdsResponse" +
            "")]
        bool DelFeaturesRecordByPatientIdAndItemIds(int patientId, int[] itemIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/UpdatePatientAccountByPatientId", ReplyAction="http://tempuri.org/IPatientService/UpdatePatientAccountByPatientIdResponse")]
        bool UpdatePatientAccountByPatientId(int patientId, string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/UpdatePatientById", ReplyAction="http://tempuri.org/IPatientService/UpdatePatientByIdResponse")]
        int UpdatePatientById(XYS.Remp.Screening.UserService.M_PatientInfo patientInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CreatePatientRelation", ReplyAction="http://tempuri.org/IPatientService/CreatePatientRelationResponse")]
        int CreatePatientRelation(XYS.Remp.Screening.UserService.M_PatientRelationInfo patientRelationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/UpdatePatientRelation", ReplyAction="http://tempuri.org/IPatientService/UpdatePatientRelationResponse")]
        int UpdatePatientRelation(XYS.Remp.Screening.UserService.M_PatientRelationInfo patientRelationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/DeletePatientRelation", ReplyAction="http://tempuri.org/IPatientService/DeletePatientRelationResponse")]
        int DeletePatientRelation(int relationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetAllPatientRelation", ReplyAction="http://tempuri.org/IPatientService/GetAllPatientRelationResponse")]
        XYS.Remp.Screening.UserService.M_PatientRelationInfo[] GetAllPatientRelation(int patientID, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientRelationInfo", ReplyAction="http://tempuri.org/IPatientService/GetPatientRelationInfoResponse")]
        XYS.Remp.Screening.UserService.M_PatientRelationInfo GetPatientRelationInfo(int relationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/UpdatePatientRelationEducation", ReplyAction="http://tempuri.org/IPatientService/UpdatePatientRelationEducationResponse")]
        bool UpdatePatientRelationEducation(int relationtId, string education);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientRelationCount", ReplyAction="http://tempuri.org/IPatientService/GetPatientRelationCountResponse")]
        int GetPatientRelationCount(int patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CreateSupplementPatientInfo", ReplyAction="http://tempuri.org/IPatientService/CreateSupplementPatientInfoResponse")]
        int CreateSupplementPatientInfo(XYS.Remp.Screening.UserService.M_SupplementPatientInfo supplentmentPatientInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/UpdateSupplementPatientInfo", ReplyAction="http://tempuri.org/IPatientService/UpdateSupplementPatientInfoResponse")]
        int UpdateSupplementPatientInfo(XYS.Remp.Screening.UserService.M_SupplementPatientInfo supplentmentPatientInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetSupplementPatientInfo", ReplyAction="http://tempuri.org/IPatientService/GetSupplementPatientInfoResponse")]
        XYS.Remp.Screening.UserService.M_SupplementPatientInfo GetSupplementPatientInfo(int sInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetSupplementPatientInfoByRelationID", ReplyAction="http://tempuri.org/IPatientService/GetSupplementPatientInfoByRelationIDResponse")]
        XYS.Remp.Screening.UserService.M_SupplementPatientInfo GetSupplementPatientInfoByRelationID(int relationtID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/CheckPatientRelNameIsExists", ReplyAction="http://tempuri.org/IPatientService/CheckPatientRelNameIsExistsResponse")]
        bool CheckPatientRelNameIsExists(int patientId, string patientRelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/UpdatePatientEducationById", ReplyAction="http://tempuri.org/IPatientService/UpdatePatientEducationByIdResponse")]
        bool UpdatePatientEducationById(int id, string education);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/DeleteSupplementPatientInfoBySInfoId", ReplyAction="http://tempuri.org/IPatientService/DeleteSupplementPatientInfoBySInfoIdResponse")]
        int DeleteSupplementPatientInfoBySInfoId(int sInfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPatientService/GetPatientAndRelationInfoByMobile", ReplyAction="http://tempuri.org/IPatientService/GetPatientAndRelationInfoByMobileResponse")]
        XYS.Remp.Screening.UserService.M_PatientExtendInfo[] GetPatientAndRelationInfoByMobile(string mobile);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPatientServiceChannel : XYS.Remp.Screening.UserService.IPatientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PatientServiceClient : System.ServiceModel.ClientBase<XYS.Remp.Screening.UserService.IPatientService>, XYS.Remp.Screening.UserService.IPatientService {
        
        public PatientServiceClient() {
        }
        
        public PatientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PatientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PatientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public XYS.Remp.Screening.UserService.M_PatientInfo CreatePatientInfo(string account, string password) {
            return base.Channel.CreatePatientInfo(account, password);
        }
        
        public int UpdatePatientInfoById(XYS.Remp.Screening.UserService.M_PatientInfo patientInfo) {
            return base.Channel.UpdatePatientInfoById(patientInfo);
        }
        
        public bool CheckPatientAccountExist(string account) {
            return base.Channel.CheckPatientAccountExist(account);
        }
        
        public bool AddResisterSmsLog(XYS.Remp.Screening.UserService.M_RegisterSmsLog entity) {
            return base.Channel.AddResisterSmsLog(entity);
        }
        
        public XYS.Remp.Screening.UserService.M_RegisterSmsLog GetVerificaton(string mobile, int type) {
            return base.Channel.GetVerificaton(mobile, type);
        }
        
        public bool CheckMobileExist(string mobile) {
            return base.Channel.CheckMobileExist(mobile);
        }
        
        public XYS.Remp.Screening.UserService.M_PatientInfo[] GetPatientInfoByMobile(string mobile) {
            return base.Channel.GetPatientInfoByMobile(mobile);
        }
        
        public bool SetVerificationDisable(int smsId) {
            return base.Channel.SetVerificationDisable(smsId);
        }
        
        public XYS.Remp.Screening.UserService.M_PatientInfo GetPatientInfoById(int PatientId) {
            return base.Channel.GetPatientInfoById(PatientId);
        }
        
        public XYS.Remp.Screening.UserService.M_PatientAccount[] GetPatientAccountByPatientId(int patientId) {
            return base.Channel.GetPatientAccountByPatientId(patientId);
        }
        
        public XYS.Remp.Screening.UserService.PageOfM_PatientInfo GetPatientByOrgIds(XYS.Remp.Screening.UserService.M_PatientGetListByOrgIdsQuery model) {
            return base.Channel.GetPatientByOrgIds(model);
        }
        
        public int InsertPatientInfoBySpecialist(XYS.Remp.Screening.UserService.M_PatientInfo model, int orgId) {
            return base.Channel.InsertPatientInfoBySpecialist(model, orgId);
        }
        
        public XYS.Remp.Screening.UserService.M_MemberFeaturesRecord[] GetFeaturesRecordsByPatientId(int patientId) {
            return base.Channel.GetFeaturesRecordsByPatientId(patientId);
        }
        
        public int InsertFeaturesRecord(XYS.Remp.Screening.UserService.M_MemberFeaturesRecord[] list) {
            return base.Channel.InsertFeaturesRecord(list);
        }
        
        public bool DelFeaturesRecord(int id) {
            return base.Channel.DelFeaturesRecord(id);
        }
        
        public int InsertFeaturesLogBatch(XYS.Remp.Screening.UserService.M_Memberfeaturesrecordlog[] list) {
            return base.Channel.InsertFeaturesLogBatch(list);
        }
        
        public int InsertFeaturesLog(XYS.Remp.Screening.UserService.M_Memberfeaturesrecordlog model) {
            return base.Channel.InsertFeaturesLog(model);
        }
        
        public XYS.Remp.Screening.UserService.M_MemberFeaturesType[] GetFeaturesTypeList() {
            return base.Channel.GetFeaturesTypeList();
        }
        
        public XYS.Remp.Screening.UserService.M_MemberFeaturesItem[] GetFeaturesItemByType(int type) {
            return base.Channel.GetFeaturesItemByType(type);
        }
        
        public bool UpdatePatientInfoBySpecialist(XYS.Remp.Screening.UserService.M_PatientInfo model) {
            return base.Channel.UpdatePatientInfoBySpecialist(model);
        }
        
        public XYS.Remp.Screening.UserService.M_PatientInfo[] GetPatientByMobileAndName(string mobile, string name) {
            return base.Channel.GetPatientByMobileAndName(mobile, name);
        }
        
        public XYS.Remp.Screening.UserService.M_MemberFeaturesItem[] GetFeaturesItemByIds(int[] ids) {
            return base.Channel.GetFeaturesItemByIds(ids);
        }
        
        public XYS.Remp.Screening.UserService.M_PatientInfo GetPatientInfoByIdForSpecialist(int patientId) {
            return base.Channel.GetPatientInfoByIdForSpecialist(patientId);
        }
        
        public XYS.Remp.Screening.UserService.M_OrganizationInfo[] GetOrgInfoByIds(int[] ids) {
            return base.Channel.GetOrgInfoByIds(ids);
        }
        
        public XYS.Remp.Screening.UserService.M_MemberFeaturesRecord GetFeaturesRecordByPatientIdAndItemId(int patientId, int itemId) {
            return base.Channel.GetFeaturesRecordByPatientIdAndItemId(patientId, itemId);
        }
        
        public XYS.Remp.Screening.UserService.M_MemberFeaturesRecord[] GetFeaturesRecordsByPatientIdAndItemIds(int patientId, int[] itemIds) {
            return base.Channel.GetFeaturesRecordsByPatientIdAndItemIds(patientId, itemIds);
        }
        
        public bool DelFeaturesRecordByPatientIdAndItemIds(int patientId, int[] itemIds) {
            return base.Channel.DelFeaturesRecordByPatientIdAndItemIds(patientId, itemIds);
        }
        
        public bool UpdatePatientAccountByPatientId(int patientId, string account) {
            return base.Channel.UpdatePatientAccountByPatientId(patientId, account);
        }
        
        public int UpdatePatientById(XYS.Remp.Screening.UserService.M_PatientInfo patientInfo) {
            return base.Channel.UpdatePatientById(patientInfo);
        }
        
        public int CreatePatientRelation(XYS.Remp.Screening.UserService.M_PatientRelationInfo patientRelationInfo) {
            return base.Channel.CreatePatientRelation(patientRelationInfo);
        }
        
        public int UpdatePatientRelation(XYS.Remp.Screening.UserService.M_PatientRelationInfo patientRelationInfo) {
            return base.Channel.UpdatePatientRelation(patientRelationInfo);
        }
        
        public int DeletePatientRelation(int relationID) {
            return base.Channel.DeletePatientRelation(relationID);
        }
        
        public XYS.Remp.Screening.UserService.M_PatientRelationInfo[] GetAllPatientRelation(int patientID, int pageIndex, int pageSize) {
            return base.Channel.GetAllPatientRelation(patientID, pageIndex, pageSize);
        }
        
        public XYS.Remp.Screening.UserService.M_PatientRelationInfo GetPatientRelationInfo(int relationID) {
            return base.Channel.GetPatientRelationInfo(relationID);
        }
        
        public bool UpdatePatientRelationEducation(int relationtId, string education) {
            return base.Channel.UpdatePatientRelationEducation(relationtId, education);
        }
        
        public int GetPatientRelationCount(int patientID) {
            return base.Channel.GetPatientRelationCount(patientID);
        }
        
        public int CreateSupplementPatientInfo(XYS.Remp.Screening.UserService.M_SupplementPatientInfo supplentmentPatientInfo) {
            return base.Channel.CreateSupplementPatientInfo(supplentmentPatientInfo);
        }
        
        public int UpdateSupplementPatientInfo(XYS.Remp.Screening.UserService.M_SupplementPatientInfo supplentmentPatientInfo) {
            return base.Channel.UpdateSupplementPatientInfo(supplentmentPatientInfo);
        }
        
        public XYS.Remp.Screening.UserService.M_SupplementPatientInfo GetSupplementPatientInfo(int sInfoId) {
            return base.Channel.GetSupplementPatientInfo(sInfoId);
        }
        
        public XYS.Remp.Screening.UserService.M_SupplementPatientInfo GetSupplementPatientInfoByRelationID(int relationtID) {
            return base.Channel.GetSupplementPatientInfoByRelationID(relationtID);
        }
        
        public bool CheckPatientRelNameIsExists(int patientId, string patientRelName) {
            return base.Channel.CheckPatientRelNameIsExists(patientId, patientRelName);
        }
        
        public bool UpdatePatientEducationById(int id, string education) {
            return base.Channel.UpdatePatientEducationById(id, education);
        }
        
        public int DeleteSupplementPatientInfoBySInfoId(int sInfoId) {
            return base.Channel.DeleteSupplementPatientInfoBySInfoId(sInfoId);
        }
        
        public XYS.Remp.Screening.UserService.M_PatientExtendInfo[] GetPatientAndRelationInfoByMobile(string mobile) {
            return base.Channel.GetPatientAndRelationInfoByMobile(mobile);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.ISpecialistService")]
    public interface ISpecialistService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/CreateNetdiagnosephrase", ReplyAction="http://tempuri.org/ISpecialistService/CreateNetdiagnosephraseResponse")]
        int CreateNetdiagnosephrase(XYS.Remp.Screening.UserService.M_Netdiagnosephrase netdiagnosephrase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/DeleteNetdiagnosephraseById", ReplyAction="http://tempuri.org/ISpecialistService/DeleteNetdiagnosephraseByIdResponse")]
        bool DeleteNetdiagnosephraseById(int phraseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/LogicDeleteNetdiagnosephrase", ReplyAction="http://tempuri.org/ISpecialistService/LogicDeleteNetdiagnosephraseResponse")]
        bool LogicDeleteNetdiagnosephrase(XYS.Remp.Screening.UserService.M_Netdiagnosephrase netdiagnosephrase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/UpdateNetdiagnosephrase", ReplyAction="http://tempuri.org/ISpecialistService/UpdateNetdiagnosephraseResponse")]
        bool UpdateNetdiagnosephrase(XYS.Remp.Screening.UserService.M_Netdiagnosephrase netdiagnosephrase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/GetNetdiagnosephraseByDrId", ReplyAction="http://tempuri.org/ISpecialistService/GetNetdiagnosephraseByDrIdResponse")]
        XYS.Remp.Screening.UserService.M_Netdiagnosephrase[] GetNetdiagnosephraseByDrId(int drId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/GetNetdiagnosephraseByContentAndCreateTime", ReplyAction="http://tempuri.org/ISpecialistService/GetNetdiagnosephraseByContentAndCreateTimeR" +
            "esponse")]
        XYS.Remp.Screening.UserService.M_Netdiagnosephrase[] GetNetdiagnosephraseByContentAndCreateTime(XYS.Remp.Screening.UserService.M_Netdiagnosephrase netdiagnosephrase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/GetNetdiagnosephraseById", ReplyAction="http://tempuri.org/ISpecialistService/GetNetdiagnosephraseByIdResponse")]
        XYS.Remp.Screening.UserService.M_Netdiagnosephrase GetNetdiagnosephraseById(int phraseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/GetNetdiagnosephraseList", ReplyAction="http://tempuri.org/ISpecialistService/GetNetdiagnosephraseListResponse")]
        XYS.Remp.Screening.UserService.PageOfM_Netdiagnosephrase GetNetdiagnosephraseList(int drId, int pageIndex, int pageSize, string keyWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/GetItemsByCategoryId", ReplyAction="http://tempuri.org/ISpecialistService/GetItemsByCategoryIdResponse")]
        XYS.Remp.Screening.UserService.M_CategoryItem[] GetItemsByCategoryId(int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/GetItemNamesByItemValue", ReplyAction="http://tempuri.org/ISpecialistService/GetItemNamesByItemValueResponse")]
        XYS.Remp.Screening.UserService.M_CategoryItem GetItemNamesByItemValue(int itemValue, int categoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/GetAllDepartmentInfo", ReplyAction="http://tempuri.org/ISpecialistService/GetAllDepartmentInfoResponse")]
        XYS.Remp.Screening.UserService.M_DepartmentInfo[] GetAllDepartmentInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/GetExpertToDepartmentByExpertId", ReplyAction="http://tempuri.org/ISpecialistService/GetExpertToDepartmentByExpertIdResponse")]
        XYS.Remp.Screening.UserService.M_DepartmentInfo GetExpertToDepartmentByExpertId(int expertId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/GetExpertPartInfoByDrId", ReplyAction="http://tempuri.org/ISpecialistService/GetExpertPartInfoByDrIdResponse")]
        XYS.Remp.Screening.UserService.M_Expertinfo GetExpertPartInfoByDrId(int drId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialistService/UpdateSingleExpert", ReplyAction="http://tempuri.org/ISpecialistService/UpdateSingleExpertResponse")]
        bool UpdateSingleExpert(string type, string value, int drId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISpecialistServiceChannel : XYS.Remp.Screening.UserService.ISpecialistService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SpecialistServiceClient : System.ServiceModel.ClientBase<XYS.Remp.Screening.UserService.ISpecialistService>, XYS.Remp.Screening.UserService.ISpecialistService {
        
        public SpecialistServiceClient() {
        }
        
        public SpecialistServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SpecialistServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpecialistServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpecialistServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateNetdiagnosephrase(XYS.Remp.Screening.UserService.M_Netdiagnosephrase netdiagnosephrase) {
            return base.Channel.CreateNetdiagnosephrase(netdiagnosephrase);
        }
        
        public bool DeleteNetdiagnosephraseById(int phraseId) {
            return base.Channel.DeleteNetdiagnosephraseById(phraseId);
        }
        
        public bool LogicDeleteNetdiagnosephrase(XYS.Remp.Screening.UserService.M_Netdiagnosephrase netdiagnosephrase) {
            return base.Channel.LogicDeleteNetdiagnosephrase(netdiagnosephrase);
        }
        
        public bool UpdateNetdiagnosephrase(XYS.Remp.Screening.UserService.M_Netdiagnosephrase netdiagnosephrase) {
            return base.Channel.UpdateNetdiagnosephrase(netdiagnosephrase);
        }
        
        public XYS.Remp.Screening.UserService.M_Netdiagnosephrase[] GetNetdiagnosephraseByDrId(int drId) {
            return base.Channel.GetNetdiagnosephraseByDrId(drId);
        }
        
        public XYS.Remp.Screening.UserService.M_Netdiagnosephrase[] GetNetdiagnosephraseByContentAndCreateTime(XYS.Remp.Screening.UserService.M_Netdiagnosephrase netdiagnosephrase) {
            return base.Channel.GetNetdiagnosephraseByContentAndCreateTime(netdiagnosephrase);
        }
        
        public XYS.Remp.Screening.UserService.M_Netdiagnosephrase GetNetdiagnosephraseById(int phraseId) {
            return base.Channel.GetNetdiagnosephraseById(phraseId);
        }
        
        public XYS.Remp.Screening.UserService.PageOfM_Netdiagnosephrase GetNetdiagnosephraseList(int drId, int pageIndex, int pageSize, string keyWord) {
            return base.Channel.GetNetdiagnosephraseList(drId, pageIndex, pageSize, keyWord);
        }
        
        public XYS.Remp.Screening.UserService.M_CategoryItem[] GetItemsByCategoryId(int categoryId) {
            return base.Channel.GetItemsByCategoryId(categoryId);
        }
        
        public XYS.Remp.Screening.UserService.M_CategoryItem GetItemNamesByItemValue(int itemValue, int categoryId) {
            return base.Channel.GetItemNamesByItemValue(itemValue, categoryId);
        }
        
        public XYS.Remp.Screening.UserService.M_DepartmentInfo[] GetAllDepartmentInfo() {
            return base.Channel.GetAllDepartmentInfo();
        }
        
        public XYS.Remp.Screening.UserService.M_DepartmentInfo GetExpertToDepartmentByExpertId(int expertId) {
            return base.Channel.GetExpertToDepartmentByExpertId(expertId);
        }
        
        public XYS.Remp.Screening.UserService.M_Expertinfo GetExpertPartInfoByDrId(int drId) {
            return base.Channel.GetExpertPartInfoByDrId(drId);
        }
        
        public bool UpdateSingleExpert(string type, string value, int drId) {
            return base.Channel.UpdateSingleExpert(type, value, drId);
        }
    }
}
